
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Correo
 * 
 */
export type Correo = $Result.DefaultSelection<Prisma.$CorreoPayload>
/**
 * Model DireccionBloqueada
 * 
 */
export type DireccionBloqueada = $Result.DefaultSelection<Prisma.$DireccionBloqueadaPayload>
/**
 * Model DireccionFavorita
 * 
 */
export type DireccionFavorita = $Result.DefaultSelection<Prisma.$DireccionFavoritaPayload>
/**
 * Model TemaCorreo
 * 
 */
export type TemaCorreo = $Result.DefaultSelection<Prisma.$TemaCorreoPayload>
/**
 * Model EstiloFirma
 * 
 */
export type EstiloFirma = $Result.DefaultSelection<Prisma.$EstiloFirmaPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.correo`: Exposes CRUD operations for the **Correo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Correos
    * const correos = await prisma.correo.findMany()
    * ```
    */
  get correo(): Prisma.CorreoDelegate<ExtArgs>;

  /**
   * `prisma.direccionBloqueada`: Exposes CRUD operations for the **DireccionBloqueada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DireccionBloqueadas
    * const direccionBloqueadas = await prisma.direccionBloqueada.findMany()
    * ```
    */
  get direccionBloqueada(): Prisma.DireccionBloqueadaDelegate<ExtArgs>;

  /**
   * `prisma.direccionFavorita`: Exposes CRUD operations for the **DireccionFavorita** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DireccionFavoritas
    * const direccionFavoritas = await prisma.direccionFavorita.findMany()
    * ```
    */
  get direccionFavorita(): Prisma.DireccionFavoritaDelegate<ExtArgs>;

  /**
   * `prisma.temaCorreo`: Exposes CRUD operations for the **TemaCorreo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TemaCorreos
    * const temaCorreos = await prisma.temaCorreo.findMany()
    * ```
    */
  get temaCorreo(): Prisma.TemaCorreoDelegate<ExtArgs>;

  /**
   * `prisma.estiloFirma`: Exposes CRUD operations for the **EstiloFirma** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstiloFirmas
    * const estiloFirmas = await prisma.estiloFirma.findMany()
    * ```
    */
  get estiloFirma(): Prisma.EstiloFirmaDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.15.0
   * Query Engine version: 12e25d8d06f6ea5a0252864dd9a03b1bb51f3022
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Correo: 'Correo',
    DireccionBloqueada: 'DireccionBloqueada',
    DireccionFavorita: 'DireccionFavorita',
    TemaCorreo: 'TemaCorreo',
    EstiloFirma: 'EstiloFirma'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'usuario' | 'correo' | 'direccionBloqueada' | 'direccionFavorita' | 'temaCorreo' | 'estiloFirma'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Correo: {
        payload: Prisma.$CorreoPayload<ExtArgs>
        fields: Prisma.CorreoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CorreoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CorreoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          findFirst: {
            args: Prisma.CorreoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CorreoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          findMany: {
            args: Prisma.CorreoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>[]
          }
          create: {
            args: Prisma.CorreoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          createMany: {
            args: Prisma.CorreoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CorreoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>[]
          }
          delete: {
            args: Prisma.CorreoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          update: {
            args: Prisma.CorreoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          deleteMany: {
            args: Prisma.CorreoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CorreoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CorreoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          aggregate: {
            args: Prisma.CorreoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCorreo>
          }
          groupBy: {
            args: Prisma.CorreoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CorreoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CorreoCountArgs<ExtArgs>,
            result: $Utils.Optional<CorreoCountAggregateOutputType> | number
          }
        }
      }
      DireccionBloqueada: {
        payload: Prisma.$DireccionBloqueadaPayload<ExtArgs>
        fields: Prisma.DireccionBloqueadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DireccionBloqueadaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DireccionBloqueadaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          findFirst: {
            args: Prisma.DireccionBloqueadaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DireccionBloqueadaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          findMany: {
            args: Prisma.DireccionBloqueadaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>[]
          }
          create: {
            args: Prisma.DireccionBloqueadaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          createMany: {
            args: Prisma.DireccionBloqueadaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DireccionBloqueadaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>[]
          }
          delete: {
            args: Prisma.DireccionBloqueadaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          update: {
            args: Prisma.DireccionBloqueadaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          deleteMany: {
            args: Prisma.DireccionBloqueadaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DireccionBloqueadaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DireccionBloqueadaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionBloqueadaPayload>
          }
          aggregate: {
            args: Prisma.DireccionBloqueadaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDireccionBloqueada>
          }
          groupBy: {
            args: Prisma.DireccionBloqueadaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DireccionBloqueadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DireccionBloqueadaCountArgs<ExtArgs>,
            result: $Utils.Optional<DireccionBloqueadaCountAggregateOutputType> | number
          }
        }
      }
      DireccionFavorita: {
        payload: Prisma.$DireccionFavoritaPayload<ExtArgs>
        fields: Prisma.DireccionFavoritaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DireccionFavoritaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DireccionFavoritaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          findFirst: {
            args: Prisma.DireccionFavoritaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DireccionFavoritaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          findMany: {
            args: Prisma.DireccionFavoritaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>[]
          }
          create: {
            args: Prisma.DireccionFavoritaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          createMany: {
            args: Prisma.DireccionFavoritaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DireccionFavoritaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>[]
          }
          delete: {
            args: Prisma.DireccionFavoritaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          update: {
            args: Prisma.DireccionFavoritaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          deleteMany: {
            args: Prisma.DireccionFavoritaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DireccionFavoritaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DireccionFavoritaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DireccionFavoritaPayload>
          }
          aggregate: {
            args: Prisma.DireccionFavoritaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDireccionFavorita>
          }
          groupBy: {
            args: Prisma.DireccionFavoritaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DireccionFavoritaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DireccionFavoritaCountArgs<ExtArgs>,
            result: $Utils.Optional<DireccionFavoritaCountAggregateOutputType> | number
          }
        }
      }
      TemaCorreo: {
        payload: Prisma.$TemaCorreoPayload<ExtArgs>
        fields: Prisma.TemaCorreoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TemaCorreoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TemaCorreoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          findFirst: {
            args: Prisma.TemaCorreoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TemaCorreoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          findMany: {
            args: Prisma.TemaCorreoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>[]
          }
          create: {
            args: Prisma.TemaCorreoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          createMany: {
            args: Prisma.TemaCorreoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TemaCorreoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>[]
          }
          delete: {
            args: Prisma.TemaCorreoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          update: {
            args: Prisma.TemaCorreoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          deleteMany: {
            args: Prisma.TemaCorreoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TemaCorreoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TemaCorreoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TemaCorreoPayload>
          }
          aggregate: {
            args: Prisma.TemaCorreoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTemaCorreo>
          }
          groupBy: {
            args: Prisma.TemaCorreoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TemaCorreoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TemaCorreoCountArgs<ExtArgs>,
            result: $Utils.Optional<TemaCorreoCountAggregateOutputType> | number
          }
        }
      }
      EstiloFirma: {
        payload: Prisma.$EstiloFirmaPayload<ExtArgs>
        fields: Prisma.EstiloFirmaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstiloFirmaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstiloFirmaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          findFirst: {
            args: Prisma.EstiloFirmaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstiloFirmaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          findMany: {
            args: Prisma.EstiloFirmaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>[]
          }
          create: {
            args: Prisma.EstiloFirmaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          createMany: {
            args: Prisma.EstiloFirmaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstiloFirmaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>[]
          }
          delete: {
            args: Prisma.EstiloFirmaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          update: {
            args: Prisma.EstiloFirmaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          deleteMany: {
            args: Prisma.EstiloFirmaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EstiloFirmaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EstiloFirmaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EstiloFirmaPayload>
          }
          aggregate: {
            args: Prisma.EstiloFirmaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEstiloFirma>
          }
          groupBy: {
            args: Prisma.EstiloFirmaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EstiloFirmaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstiloFirmaCountArgs<ExtArgs>,
            result: $Utils.Optional<EstiloFirmaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    correosEnviados: number
    correosRecibidos: number
    direccionesBloqueadas: number
    direccionesFavoritas: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correosEnviados?: boolean | UsuarioCountOutputTypeCountCorreosEnviadosArgs
    correosRecibidos?: boolean | UsuarioCountOutputTypeCountCorreosRecibidosArgs
    direccionesBloqueadas?: boolean | UsuarioCountOutputTypeCountDireccionesBloqueadasArgs
    direccionesFavoritas?: boolean | UsuarioCountOutputTypeCountDireccionesFavoritasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreosEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreosRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDireccionesBloqueadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionBloqueadaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDireccionesFavoritasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionFavoritaWhereInput
  }


  /**
   * Count Type TemaCorreoCountOutputType
   */

  export type TemaCorreoCountOutputType = {
    correos: number
  }

  export type TemaCorreoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos?: boolean | TemaCorreoCountOutputTypeCountCorreosArgs
  }

  // Custom InputTypes
  /**
   * TemaCorreoCountOutputType without action
   */
  export type TemaCorreoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreoCountOutputType
     */
    select?: TemaCorreoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TemaCorreoCountOutputType without action
   */
  export type TemaCorreoCountOutputTypeCountCorreosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }


  /**
   * Count Type EstiloFirmaCountOutputType
   */

  export type EstiloFirmaCountOutputType = {
    correos: number
  }

  export type EstiloFirmaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos?: boolean | EstiloFirmaCountOutputTypeCountCorreosArgs
  }

  // Custom InputTypes
  /**
   * EstiloFirmaCountOutputType without action
   */
  export type EstiloFirmaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirmaCountOutputType
     */
    select?: EstiloFirmaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstiloFirmaCountOutputType without action
   */
  export type EstiloFirmaCountOutputTypeCountCorreosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    clave: string | null
    descripcion: string | null
    fechaCreacion: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    clave: string | null
    descripcion: string | null
    fechaCreacion: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    correo: number
    clave: number
    descripcion: number
    fechaCreacion: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
    fechaCreacion?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
    fechaCreacion?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
    fechaCreacion?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    correo: string
    clave: string
    descripcion: string | null
    fechaCreacion: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
    correosEnviados?: boolean | Usuario$correosEnviadosArgs<ExtArgs>
    correosRecibidos?: boolean | Usuario$correosRecibidosArgs<ExtArgs>
    direccionesBloqueadas?: boolean | Usuario$direccionesBloqueadasArgs<ExtArgs>
    direccionesFavoritas?: boolean | Usuario$direccionesFavoritasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correosEnviados?: boolean | Usuario$correosEnviadosArgs<ExtArgs>
    correosRecibidos?: boolean | Usuario$correosRecibidosArgs<ExtArgs>
    direccionesBloqueadas?: boolean | Usuario$direccionesBloqueadasArgs<ExtArgs>
    direccionesFavoritas?: boolean | Usuario$direccionesFavoritasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      correosEnviados: Prisma.$CorreoPayload<ExtArgs>[]
      correosRecibidos: Prisma.$CorreoPayload<ExtArgs>[]
      direccionesBloqueadas: Prisma.$DireccionBloqueadaPayload<ExtArgs>[]
      direccionesFavoritas: Prisma.$DireccionFavoritaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      correo: string
      clave: string
      descripcion: string | null
      fechaCreacion: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UsuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
    **/
    create<T extends UsuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends UsuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
    **/
    delete<T extends UsuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
    **/
    upsert<T extends UsuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    correosEnviados<T extends Usuario$correosEnviadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correosEnviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    correosRecibidos<T extends Usuario$correosRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correosRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    direccionesBloqueadas<T extends Usuario$direccionesBloqueadasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$direccionesBloqueadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findMany'> | Null>;

    direccionesFavoritas<T extends Usuario$direccionesFavoritasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$direccionesFavoritasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly clave: FieldRef<"Usuario", 'String'>
    readonly descripcion: FieldRef<"Usuario", 'String'>
    readonly fechaCreacion: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.correosEnviados
   */
  export type Usuario$correosEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Usuario.correosRecibidos
   */
  export type Usuario$correosRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Usuario.direccionesBloqueadas
   */
  export type Usuario$direccionesBloqueadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    where?: DireccionBloqueadaWhereInput
    orderBy?: DireccionBloqueadaOrderByWithRelationInput | DireccionBloqueadaOrderByWithRelationInput[]
    cursor?: DireccionBloqueadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DireccionBloqueadaScalarFieldEnum | DireccionBloqueadaScalarFieldEnum[]
  }

  /**
   * Usuario.direccionesFavoritas
   */
  export type Usuario$direccionesFavoritasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    where?: DireccionFavoritaWhereInput
    orderBy?: DireccionFavoritaOrderByWithRelationInput | DireccionFavoritaOrderByWithRelationInput[]
    cursor?: DireccionFavoritaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DireccionFavoritaScalarFieldEnum | DireccionFavoritaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Correo
   */

  export type AggregateCorreo = {
    _count: CorreoCountAggregateOutputType | null
    _avg: CorreoAvgAggregateOutputType | null
    _sum: CorreoSumAggregateOutputType | null
    _min: CorreoMinAggregateOutputType | null
    _max: CorreoMaxAggregateOutputType | null
  }

  export type CorreoAvgAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    duracionAnimacion: number | null
    estiloFirmaId: number | null
    temaId: number | null
  }

  export type CorreoSumAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    duracionAnimacion: number | null
    estiloFirmaId: number | null
    temaId: number | null
  }

  export type CorreoMinAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    asunto: string | null
    cuerpo: string | null
    fechaEnvio: Date | null
    leido: boolean | null
    esFavorito: boolean | null
    colorFondo: string | null
    nombreAnimacion: string | null
    duracionAnimacion: number | null
    contenidoAnuncio: string | null
    fechaMostradoAnuncio: Date | null
    estiloFirmaId: number | null
    temaId: number | null
  }

  export type CorreoMaxAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    asunto: string | null
    cuerpo: string | null
    fechaEnvio: Date | null
    leido: boolean | null
    esFavorito: boolean | null
    colorFondo: string | null
    nombreAnimacion: string | null
    duracionAnimacion: number | null
    contenidoAnuncio: string | null
    fechaMostradoAnuncio: Date | null
    estiloFirmaId: number | null
    temaId: number | null
  }

  export type CorreoCountAggregateOutputType = {
    id: number
    remitenteId: number
    destinatarioId: number
    asunto: number
    cuerpo: number
    fechaEnvio: number
    leido: number
    esFavorito: number
    colorFondo: number
    nombreAnimacion: number
    duracionAnimacion: number
    contenidoAnuncio: number
    fechaMostradoAnuncio: number
    estiloFirmaId: number
    temaId: number
    _all: number
  }


  export type CorreoAvgAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    duracionAnimacion?: true
    estiloFirmaId?: true
    temaId?: true
  }

  export type CorreoSumAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    duracionAnimacion?: true
    estiloFirmaId?: true
    temaId?: true
  }

  export type CorreoMinAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    asunto?: true
    cuerpo?: true
    fechaEnvio?: true
    leido?: true
    esFavorito?: true
    colorFondo?: true
    nombreAnimacion?: true
    duracionAnimacion?: true
    contenidoAnuncio?: true
    fechaMostradoAnuncio?: true
    estiloFirmaId?: true
    temaId?: true
  }

  export type CorreoMaxAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    asunto?: true
    cuerpo?: true
    fechaEnvio?: true
    leido?: true
    esFavorito?: true
    colorFondo?: true
    nombreAnimacion?: true
    duracionAnimacion?: true
    contenidoAnuncio?: true
    fechaMostradoAnuncio?: true
    estiloFirmaId?: true
    temaId?: true
  }

  export type CorreoCountAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    asunto?: true
    cuerpo?: true
    fechaEnvio?: true
    leido?: true
    esFavorito?: true
    colorFondo?: true
    nombreAnimacion?: true
    duracionAnimacion?: true
    contenidoAnuncio?: true
    fechaMostradoAnuncio?: true
    estiloFirmaId?: true
    temaId?: true
    _all?: true
  }

  export type CorreoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correo to aggregate.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Correos
    **/
    _count?: true | CorreoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CorreoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CorreoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CorreoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CorreoMaxAggregateInputType
  }

  export type GetCorreoAggregateType<T extends CorreoAggregateArgs> = {
        [P in keyof T & keyof AggregateCorreo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCorreo[P]>
      : GetScalarType<T[P], AggregateCorreo[P]>
  }




  export type CorreoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithAggregationInput | CorreoOrderByWithAggregationInput[]
    by: CorreoScalarFieldEnum[] | CorreoScalarFieldEnum
    having?: CorreoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CorreoCountAggregateInputType | true
    _avg?: CorreoAvgAggregateInputType
    _sum?: CorreoSumAggregateInputType
    _min?: CorreoMinAggregateInputType
    _max?: CorreoMaxAggregateInputType
  }

  export type CorreoGroupByOutputType = {
    id: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio: Date
    leido: boolean
    esFavorito: boolean
    colorFondo: string | null
    nombreAnimacion: string | null
    duracionAnimacion: number | null
    contenidoAnuncio: string | null
    fechaMostradoAnuncio: Date | null
    estiloFirmaId: number | null
    temaId: number | null
    _count: CorreoCountAggregateOutputType | null
    _avg: CorreoAvgAggregateOutputType | null
    _sum: CorreoSumAggregateOutputType | null
    _min: CorreoMinAggregateOutputType | null
    _max: CorreoMaxAggregateOutputType | null
  }

  type GetCorreoGroupByPayload<T extends CorreoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CorreoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CorreoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CorreoGroupByOutputType[P]>
            : GetScalarType<T[P], CorreoGroupByOutputType[P]>
        }
      >
    >


  export type CorreoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: boolean
    nombreAnimacion?: boolean
    duracionAnimacion?: boolean
    contenidoAnuncio?: boolean
    fechaMostradoAnuncio?: boolean
    estiloFirmaId?: boolean
    temaId?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estiloFirma?: boolean | Correo$estiloFirmaArgs<ExtArgs>
    tema?: boolean | Correo$temaArgs<ExtArgs>
  }, ExtArgs["result"]["correo"]>

  export type CorreoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: boolean
    nombreAnimacion?: boolean
    duracionAnimacion?: boolean
    contenidoAnuncio?: boolean
    fechaMostradoAnuncio?: boolean
    estiloFirmaId?: boolean
    temaId?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estiloFirma?: boolean | Correo$estiloFirmaArgs<ExtArgs>
    tema?: boolean | Correo$temaArgs<ExtArgs>
  }, ExtArgs["result"]["correo"]>

  export type CorreoSelectScalar = {
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: boolean
    nombreAnimacion?: boolean
    duracionAnimacion?: boolean
    contenidoAnuncio?: boolean
    fechaMostradoAnuncio?: boolean
    estiloFirmaId?: boolean
    temaId?: boolean
  }

  export type CorreoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estiloFirma?: boolean | Correo$estiloFirmaArgs<ExtArgs>
    tema?: boolean | Correo$temaArgs<ExtArgs>
  }
  export type CorreoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estiloFirma?: boolean | Correo$estiloFirmaArgs<ExtArgs>
    tema?: boolean | Correo$temaArgs<ExtArgs>
  }

  export type $CorreoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Correo"
    objects: {
      remitente: Prisma.$UsuarioPayload<ExtArgs>
      destinatario: Prisma.$UsuarioPayload<ExtArgs>
      estiloFirma: Prisma.$EstiloFirmaPayload<ExtArgs> | null
      tema: Prisma.$TemaCorreoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      remitenteId: number
      destinatarioId: number
      asunto: string
      cuerpo: string
      fechaEnvio: Date
      leido: boolean
      esFavorito: boolean
      colorFondo: string | null
      nombreAnimacion: string | null
      duracionAnimacion: number | null
      contenidoAnuncio: string | null
      fechaMostradoAnuncio: Date | null
      estiloFirmaId: number | null
      temaId: number | null
    }, ExtArgs["result"]["correo"]>
    composites: {}
  }

  type CorreoGetPayload<S extends boolean | null | undefined | CorreoDefaultArgs> = $Result.GetResult<Prisma.$CorreoPayload, S>

  type CorreoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CorreoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CorreoCountAggregateInputType | true
    }

  export interface CorreoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Correo'], meta: { name: 'Correo' } }
    /**
     * Find zero or one Correo that matches the filter.
     * @param {CorreoFindUniqueArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CorreoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoFindUniqueArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Correo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CorreoFindUniqueOrThrowArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CorreoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Correo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindFirstArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CorreoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindFirstArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Correo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindFirstOrThrowArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CorreoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Correos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Correos
     * const correos = await prisma.correo.findMany()
     * 
     * // Get first 10 Correos
     * const correos = await prisma.correo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const correoWithIdOnly = await prisma.correo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CorreoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Correo.
     * @param {CorreoCreateArgs} args - Arguments to create a Correo.
     * @example
     * // Create one Correo
     * const Correo = await prisma.correo.create({
     *   data: {
     *     // ... data to create a Correo
     *   }
     * })
     * 
    **/
    create<T extends CorreoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoCreateArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Correos.
     * @param {CorreoCreateManyArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correo = await prisma.correo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CorreoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Correos and returns the data saved in the database.
     * @param {CorreoCreateManyAndReturnArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correo = await prisma.correo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Correos and only return the `id`
     * const correoWithIdOnly = await prisma.correo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CorreoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Correo.
     * @param {CorreoDeleteArgs} args - Arguments to delete one Correo.
     * @example
     * // Delete one Correo
     * const Correo = await prisma.correo.delete({
     *   where: {
     *     // ... filter to delete one Correo
     *   }
     * })
     * 
    **/
    delete<T extends CorreoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoDeleteArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Correo.
     * @param {CorreoUpdateArgs} args - Arguments to update one Correo.
     * @example
     * // Update one Correo
     * const correo = await prisma.correo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CorreoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpdateArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Correos.
     * @param {CorreoDeleteManyArgs} args - Arguments to filter Correos to delete.
     * @example
     * // Delete a few Correos
     * const { count } = await prisma.correo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CorreoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Correos
     * const correo = await prisma.correo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CorreoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Correo.
     * @param {CorreoUpsertArgs} args - Arguments to update or create a Correo.
     * @example
     * // Update or create a Correo
     * const correo = await prisma.correo.upsert({
     *   create: {
     *     // ... data to create a Correo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Correo we want to update
     *   }
     * })
    **/
    upsert<T extends CorreoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpsertArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoCountArgs} args - Arguments to filter Correos to count.
     * @example
     * // Count the number of Correos
     * const count = await prisma.correo.count({
     *   where: {
     *     // ... the filter for the Correos we want to count
     *   }
     * })
    **/
    count<T extends CorreoCountArgs>(
      args?: Subset<T, CorreoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CorreoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Correo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CorreoAggregateArgs>(args: Subset<T, CorreoAggregateArgs>): Prisma.PrismaPromise<GetCorreoAggregateType<T>>

    /**
     * Group by Correo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CorreoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CorreoGroupByArgs['orderBy'] }
        : { orderBy?: CorreoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CorreoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCorreoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Correo model
   */
  readonly fields: CorreoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Correo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CorreoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    remitente<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    destinatario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    estiloFirma<T extends Correo$estiloFirmaArgs<ExtArgs> = {}>(args?: Subset<T, Correo$estiloFirmaArgs<ExtArgs>>): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tema<T extends Correo$temaArgs<ExtArgs> = {}>(args?: Subset<T, Correo$temaArgs<ExtArgs>>): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Correo model
   */ 
  interface CorreoFieldRefs {
    readonly id: FieldRef<"Correo", 'Int'>
    readonly remitenteId: FieldRef<"Correo", 'Int'>
    readonly destinatarioId: FieldRef<"Correo", 'Int'>
    readonly asunto: FieldRef<"Correo", 'String'>
    readonly cuerpo: FieldRef<"Correo", 'String'>
    readonly fechaEnvio: FieldRef<"Correo", 'DateTime'>
    readonly leido: FieldRef<"Correo", 'Boolean'>
    readonly esFavorito: FieldRef<"Correo", 'Boolean'>
    readonly colorFondo: FieldRef<"Correo", 'String'>
    readonly nombreAnimacion: FieldRef<"Correo", 'String'>
    readonly duracionAnimacion: FieldRef<"Correo", 'Int'>
    readonly contenidoAnuncio: FieldRef<"Correo", 'String'>
    readonly fechaMostradoAnuncio: FieldRef<"Correo", 'DateTime'>
    readonly estiloFirmaId: FieldRef<"Correo", 'Int'>
    readonly temaId: FieldRef<"Correo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Correo findUnique
   */
  export type CorreoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo findUniqueOrThrow
   */
  export type CorreoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo findFirst
   */
  export type CorreoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo findFirstOrThrow
   */
  export type CorreoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo findMany
   */
  export type CorreoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo create
   */
  export type CorreoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The data needed to create a Correo.
     */
    data: XOR<CorreoCreateInput, CorreoUncheckedCreateInput>
  }

  /**
   * Correo createMany
   */
  export type CorreoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Correos.
     */
    data: CorreoCreateManyInput | CorreoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Correo createManyAndReturn
   */
  export type CorreoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Correos.
     */
    data: CorreoCreateManyInput | CorreoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Correo update
   */
  export type CorreoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The data needed to update a Correo.
     */
    data: XOR<CorreoUpdateInput, CorreoUncheckedUpdateInput>
    /**
     * Choose, which Correo to update.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo updateMany
   */
  export type CorreoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Correos.
     */
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyInput>
    /**
     * Filter which Correos to update
     */
    where?: CorreoWhereInput
  }

  /**
   * Correo upsert
   */
  export type CorreoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The filter to search for the Correo to update in case it exists.
     */
    where: CorreoWhereUniqueInput
    /**
     * In case the Correo found by the `where` argument doesn't exist, create a new Correo with this data.
     */
    create: XOR<CorreoCreateInput, CorreoUncheckedCreateInput>
    /**
     * In case the Correo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CorreoUpdateInput, CorreoUncheckedUpdateInput>
  }

  /**
   * Correo delete
   */
  export type CorreoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter which Correo to delete.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo deleteMany
   */
  export type CorreoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correos to delete
     */
    where?: CorreoWhereInput
  }

  /**
   * Correo.estiloFirma
   */
  export type Correo$estiloFirmaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    where?: EstiloFirmaWhereInput
  }

  /**
   * Correo.tema
   */
  export type Correo$temaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    where?: TemaCorreoWhereInput
  }

  /**
   * Correo without action
   */
  export type CorreoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
  }


  /**
   * Model DireccionBloqueada
   */

  export type AggregateDireccionBloqueada = {
    _count: DireccionBloqueadaCountAggregateOutputType | null
    _avg: DireccionBloqueadaAvgAggregateOutputType | null
    _sum: DireccionBloqueadaSumAggregateOutputType | null
    _min: DireccionBloqueadaMinAggregateOutputType | null
    _max: DireccionBloqueadaMaxAggregateOutputType | null
  }

  export type DireccionBloqueadaAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DireccionBloqueadaSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DireccionBloqueadaMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    direccionBloqueada: string | null
    fechaBloqueo: Date | null
  }

  export type DireccionBloqueadaMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    direccionBloqueada: string | null
    fechaBloqueo: Date | null
  }

  export type DireccionBloqueadaCountAggregateOutputType = {
    id: number
    usuarioId: number
    direccionBloqueada: number
    fechaBloqueo: number
    _all: number
  }


  export type DireccionBloqueadaAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DireccionBloqueadaSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DireccionBloqueadaMinAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionBloqueada?: true
    fechaBloqueo?: true
  }

  export type DireccionBloqueadaMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionBloqueada?: true
    fechaBloqueo?: true
  }

  export type DireccionBloqueadaCountAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionBloqueada?: true
    fechaBloqueo?: true
    _all?: true
  }

  export type DireccionBloqueadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DireccionBloqueada to aggregate.
     */
    where?: DireccionBloqueadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionBloqueadas to fetch.
     */
    orderBy?: DireccionBloqueadaOrderByWithRelationInput | DireccionBloqueadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DireccionBloqueadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionBloqueadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionBloqueadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DireccionBloqueadas
    **/
    _count?: true | DireccionBloqueadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DireccionBloqueadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DireccionBloqueadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DireccionBloqueadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DireccionBloqueadaMaxAggregateInputType
  }

  export type GetDireccionBloqueadaAggregateType<T extends DireccionBloqueadaAggregateArgs> = {
        [P in keyof T & keyof AggregateDireccionBloqueada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDireccionBloqueada[P]>
      : GetScalarType<T[P], AggregateDireccionBloqueada[P]>
  }




  export type DireccionBloqueadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionBloqueadaWhereInput
    orderBy?: DireccionBloqueadaOrderByWithAggregationInput | DireccionBloqueadaOrderByWithAggregationInput[]
    by: DireccionBloqueadaScalarFieldEnum[] | DireccionBloqueadaScalarFieldEnum
    having?: DireccionBloqueadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DireccionBloqueadaCountAggregateInputType | true
    _avg?: DireccionBloqueadaAvgAggregateInputType
    _sum?: DireccionBloqueadaSumAggregateInputType
    _min?: DireccionBloqueadaMinAggregateInputType
    _max?: DireccionBloqueadaMaxAggregateInputType
  }

  export type DireccionBloqueadaGroupByOutputType = {
    id: number
    usuarioId: number
    direccionBloqueada: string
    fechaBloqueo: Date
    _count: DireccionBloqueadaCountAggregateOutputType | null
    _avg: DireccionBloqueadaAvgAggregateOutputType | null
    _sum: DireccionBloqueadaSumAggregateOutputType | null
    _min: DireccionBloqueadaMinAggregateOutputType | null
    _max: DireccionBloqueadaMaxAggregateOutputType | null
  }

  type GetDireccionBloqueadaGroupByPayload<T extends DireccionBloqueadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DireccionBloqueadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DireccionBloqueadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DireccionBloqueadaGroupByOutputType[P]>
            : GetScalarType<T[P], DireccionBloqueadaGroupByOutputType[P]>
        }
      >
    >


  export type DireccionBloqueadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    direccionBloqueada?: boolean
    fechaBloqueo?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccionBloqueada"]>

  export type DireccionBloqueadaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    direccionBloqueada?: boolean
    fechaBloqueo?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccionBloqueada"]>

  export type DireccionBloqueadaSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    direccionBloqueada?: boolean
    fechaBloqueo?: boolean
  }

  export type DireccionBloqueadaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type DireccionBloqueadaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $DireccionBloqueadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DireccionBloqueada"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      direccionBloqueada: string
      fechaBloqueo: Date
    }, ExtArgs["result"]["direccionBloqueada"]>
    composites: {}
  }

  type DireccionBloqueadaGetPayload<S extends boolean | null | undefined | DireccionBloqueadaDefaultArgs> = $Result.GetResult<Prisma.$DireccionBloqueadaPayload, S>

  type DireccionBloqueadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DireccionBloqueadaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DireccionBloqueadaCountAggregateInputType | true
    }

  export interface DireccionBloqueadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DireccionBloqueada'], meta: { name: 'DireccionBloqueada' } }
    /**
     * Find zero or one DireccionBloqueada that matches the filter.
     * @param {DireccionBloqueadaFindUniqueArgs} args - Arguments to find a DireccionBloqueada
     * @example
     * // Get one DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DireccionBloqueadaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaFindUniqueArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DireccionBloqueada that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DireccionBloqueadaFindUniqueOrThrowArgs} args - Arguments to find a DireccionBloqueada
     * @example
     * // Get one DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DireccionBloqueadaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DireccionBloqueada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaFindFirstArgs} args - Arguments to find a DireccionBloqueada
     * @example
     * // Get one DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DireccionBloqueadaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaFindFirstArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DireccionBloqueada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaFindFirstOrThrowArgs} args - Arguments to find a DireccionBloqueada
     * @example
     * // Get one DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DireccionBloqueadaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DireccionBloqueadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DireccionBloqueadas
     * const direccionBloqueadas = await prisma.direccionBloqueada.findMany()
     * 
     * // Get first 10 DireccionBloqueadas
     * const direccionBloqueadas = await prisma.direccionBloqueada.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const direccionBloqueadaWithIdOnly = await prisma.direccionBloqueada.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DireccionBloqueadaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DireccionBloqueada.
     * @param {DireccionBloqueadaCreateArgs} args - Arguments to create a DireccionBloqueada.
     * @example
     * // Create one DireccionBloqueada
     * const DireccionBloqueada = await prisma.direccionBloqueada.create({
     *   data: {
     *     // ... data to create a DireccionBloqueada
     *   }
     * })
     * 
    **/
    create<T extends DireccionBloqueadaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaCreateArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DireccionBloqueadas.
     * @param {DireccionBloqueadaCreateManyArgs} args - Arguments to create many DireccionBloqueadas.
     * @example
     * // Create many DireccionBloqueadas
     * const direccionBloqueada = await prisma.direccionBloqueada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DireccionBloqueadaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DireccionBloqueadas and returns the data saved in the database.
     * @param {DireccionBloqueadaCreateManyAndReturnArgs} args - Arguments to create many DireccionBloqueadas.
     * @example
     * // Create many DireccionBloqueadas
     * const direccionBloqueada = await prisma.direccionBloqueada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DireccionBloqueadas and only return the `id`
     * const direccionBloqueadaWithIdOnly = await prisma.direccionBloqueada.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DireccionBloqueadaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a DireccionBloqueada.
     * @param {DireccionBloqueadaDeleteArgs} args - Arguments to delete one DireccionBloqueada.
     * @example
     * // Delete one DireccionBloqueada
     * const DireccionBloqueada = await prisma.direccionBloqueada.delete({
     *   where: {
     *     // ... filter to delete one DireccionBloqueada
     *   }
     * })
     * 
    **/
    delete<T extends DireccionBloqueadaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaDeleteArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DireccionBloqueada.
     * @param {DireccionBloqueadaUpdateArgs} args - Arguments to update one DireccionBloqueada.
     * @example
     * // Update one DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DireccionBloqueadaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaUpdateArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DireccionBloqueadas.
     * @param {DireccionBloqueadaDeleteManyArgs} args - Arguments to filter DireccionBloqueadas to delete.
     * @example
     * // Delete a few DireccionBloqueadas
     * const { count } = await prisma.direccionBloqueada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DireccionBloqueadaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionBloqueadaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DireccionBloqueadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DireccionBloqueadas
     * const direccionBloqueada = await prisma.direccionBloqueada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DireccionBloqueadaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DireccionBloqueada.
     * @param {DireccionBloqueadaUpsertArgs} args - Arguments to update or create a DireccionBloqueada.
     * @example
     * // Update or create a DireccionBloqueada
     * const direccionBloqueada = await prisma.direccionBloqueada.upsert({
     *   create: {
     *     // ... data to create a DireccionBloqueada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DireccionBloqueada we want to update
     *   }
     * })
    **/
    upsert<T extends DireccionBloqueadaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionBloqueadaUpsertArgs<ExtArgs>>
    ): Prisma__DireccionBloqueadaClient<$Result.GetResult<Prisma.$DireccionBloqueadaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DireccionBloqueadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaCountArgs} args - Arguments to filter DireccionBloqueadas to count.
     * @example
     * // Count the number of DireccionBloqueadas
     * const count = await prisma.direccionBloqueada.count({
     *   where: {
     *     // ... the filter for the DireccionBloqueadas we want to count
     *   }
     * })
    **/
    count<T extends DireccionBloqueadaCountArgs>(
      args?: Subset<T, DireccionBloqueadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DireccionBloqueadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DireccionBloqueada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DireccionBloqueadaAggregateArgs>(args: Subset<T, DireccionBloqueadaAggregateArgs>): Prisma.PrismaPromise<GetDireccionBloqueadaAggregateType<T>>

    /**
     * Group by DireccionBloqueada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionBloqueadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DireccionBloqueadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DireccionBloqueadaGroupByArgs['orderBy'] }
        : { orderBy?: DireccionBloqueadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DireccionBloqueadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccionBloqueadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DireccionBloqueada model
   */
  readonly fields: DireccionBloqueadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DireccionBloqueada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DireccionBloqueadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the DireccionBloqueada model
   */ 
  interface DireccionBloqueadaFieldRefs {
    readonly id: FieldRef<"DireccionBloqueada", 'Int'>
    readonly usuarioId: FieldRef<"DireccionBloqueada", 'Int'>
    readonly direccionBloqueada: FieldRef<"DireccionBloqueada", 'String'>
    readonly fechaBloqueo: FieldRef<"DireccionBloqueada", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DireccionBloqueada findUnique
   */
  export type DireccionBloqueadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionBloqueada to fetch.
     */
    where: DireccionBloqueadaWhereUniqueInput
  }

  /**
   * DireccionBloqueada findUniqueOrThrow
   */
  export type DireccionBloqueadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionBloqueada to fetch.
     */
    where: DireccionBloqueadaWhereUniqueInput
  }

  /**
   * DireccionBloqueada findFirst
   */
  export type DireccionBloqueadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionBloqueada to fetch.
     */
    where?: DireccionBloqueadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionBloqueadas to fetch.
     */
    orderBy?: DireccionBloqueadaOrderByWithRelationInput | DireccionBloqueadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DireccionBloqueadas.
     */
    cursor?: DireccionBloqueadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionBloqueadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionBloqueadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DireccionBloqueadas.
     */
    distinct?: DireccionBloqueadaScalarFieldEnum | DireccionBloqueadaScalarFieldEnum[]
  }

  /**
   * DireccionBloqueada findFirstOrThrow
   */
  export type DireccionBloqueadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionBloqueada to fetch.
     */
    where?: DireccionBloqueadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionBloqueadas to fetch.
     */
    orderBy?: DireccionBloqueadaOrderByWithRelationInput | DireccionBloqueadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DireccionBloqueadas.
     */
    cursor?: DireccionBloqueadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionBloqueadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionBloqueadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DireccionBloqueadas.
     */
    distinct?: DireccionBloqueadaScalarFieldEnum | DireccionBloqueadaScalarFieldEnum[]
  }

  /**
   * DireccionBloqueada findMany
   */
  export type DireccionBloqueadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionBloqueadas to fetch.
     */
    where?: DireccionBloqueadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionBloqueadas to fetch.
     */
    orderBy?: DireccionBloqueadaOrderByWithRelationInput | DireccionBloqueadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DireccionBloqueadas.
     */
    cursor?: DireccionBloqueadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionBloqueadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionBloqueadas.
     */
    skip?: number
    distinct?: DireccionBloqueadaScalarFieldEnum | DireccionBloqueadaScalarFieldEnum[]
  }

  /**
   * DireccionBloqueada create
   */
  export type DireccionBloqueadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * The data needed to create a DireccionBloqueada.
     */
    data: XOR<DireccionBloqueadaCreateInput, DireccionBloqueadaUncheckedCreateInput>
  }

  /**
   * DireccionBloqueada createMany
   */
  export type DireccionBloqueadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DireccionBloqueadas.
     */
    data: DireccionBloqueadaCreateManyInput | DireccionBloqueadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DireccionBloqueada createManyAndReturn
   */
  export type DireccionBloqueadaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DireccionBloqueadas.
     */
    data: DireccionBloqueadaCreateManyInput | DireccionBloqueadaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DireccionBloqueada update
   */
  export type DireccionBloqueadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * The data needed to update a DireccionBloqueada.
     */
    data: XOR<DireccionBloqueadaUpdateInput, DireccionBloqueadaUncheckedUpdateInput>
    /**
     * Choose, which DireccionBloqueada to update.
     */
    where: DireccionBloqueadaWhereUniqueInput
  }

  /**
   * DireccionBloqueada updateMany
   */
  export type DireccionBloqueadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DireccionBloqueadas.
     */
    data: XOR<DireccionBloqueadaUpdateManyMutationInput, DireccionBloqueadaUncheckedUpdateManyInput>
    /**
     * Filter which DireccionBloqueadas to update
     */
    where?: DireccionBloqueadaWhereInput
  }

  /**
   * DireccionBloqueada upsert
   */
  export type DireccionBloqueadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * The filter to search for the DireccionBloqueada to update in case it exists.
     */
    where: DireccionBloqueadaWhereUniqueInput
    /**
     * In case the DireccionBloqueada found by the `where` argument doesn't exist, create a new DireccionBloqueada with this data.
     */
    create: XOR<DireccionBloqueadaCreateInput, DireccionBloqueadaUncheckedCreateInput>
    /**
     * In case the DireccionBloqueada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DireccionBloqueadaUpdateInput, DireccionBloqueadaUncheckedUpdateInput>
  }

  /**
   * DireccionBloqueada delete
   */
  export type DireccionBloqueadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
    /**
     * Filter which DireccionBloqueada to delete.
     */
    where: DireccionBloqueadaWhereUniqueInput
  }

  /**
   * DireccionBloqueada deleteMany
   */
  export type DireccionBloqueadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DireccionBloqueadas to delete
     */
    where?: DireccionBloqueadaWhereInput
  }

  /**
   * DireccionBloqueada without action
   */
  export type DireccionBloqueadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionBloqueada
     */
    select?: DireccionBloqueadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionBloqueadaInclude<ExtArgs> | null
  }


  /**
   * Model DireccionFavorita
   */

  export type AggregateDireccionFavorita = {
    _count: DireccionFavoritaCountAggregateOutputType | null
    _avg: DireccionFavoritaAvgAggregateOutputType | null
    _sum: DireccionFavoritaSumAggregateOutputType | null
    _min: DireccionFavoritaMinAggregateOutputType | null
    _max: DireccionFavoritaMaxAggregateOutputType | null
  }

  export type DireccionFavoritaAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DireccionFavoritaSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DireccionFavoritaMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    direccionFavorita: string | null
    fechaAgregado: Date | null
    categoria: string | null
  }

  export type DireccionFavoritaMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    direccionFavorita: string | null
    fechaAgregado: Date | null
    categoria: string | null
  }

  export type DireccionFavoritaCountAggregateOutputType = {
    id: number
    usuarioId: number
    direccionFavorita: number
    fechaAgregado: number
    categoria: number
    _all: number
  }


  export type DireccionFavoritaAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DireccionFavoritaSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DireccionFavoritaMinAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionFavorita?: true
    fechaAgregado?: true
    categoria?: true
  }

  export type DireccionFavoritaMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionFavorita?: true
    fechaAgregado?: true
    categoria?: true
  }

  export type DireccionFavoritaCountAggregateInputType = {
    id?: true
    usuarioId?: true
    direccionFavorita?: true
    fechaAgregado?: true
    categoria?: true
    _all?: true
  }

  export type DireccionFavoritaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DireccionFavorita to aggregate.
     */
    where?: DireccionFavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionFavoritas to fetch.
     */
    orderBy?: DireccionFavoritaOrderByWithRelationInput | DireccionFavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DireccionFavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionFavoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionFavoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DireccionFavoritas
    **/
    _count?: true | DireccionFavoritaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DireccionFavoritaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DireccionFavoritaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DireccionFavoritaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DireccionFavoritaMaxAggregateInputType
  }

  export type GetDireccionFavoritaAggregateType<T extends DireccionFavoritaAggregateArgs> = {
        [P in keyof T & keyof AggregateDireccionFavorita]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDireccionFavorita[P]>
      : GetScalarType<T[P], AggregateDireccionFavorita[P]>
  }




  export type DireccionFavoritaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionFavoritaWhereInput
    orderBy?: DireccionFavoritaOrderByWithAggregationInput | DireccionFavoritaOrderByWithAggregationInput[]
    by: DireccionFavoritaScalarFieldEnum[] | DireccionFavoritaScalarFieldEnum
    having?: DireccionFavoritaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DireccionFavoritaCountAggregateInputType | true
    _avg?: DireccionFavoritaAvgAggregateInputType
    _sum?: DireccionFavoritaSumAggregateInputType
    _min?: DireccionFavoritaMinAggregateInputType
    _max?: DireccionFavoritaMaxAggregateInputType
  }

  export type DireccionFavoritaGroupByOutputType = {
    id: number
    usuarioId: number
    direccionFavorita: string
    fechaAgregado: Date
    categoria: string | null
    _count: DireccionFavoritaCountAggregateOutputType | null
    _avg: DireccionFavoritaAvgAggregateOutputType | null
    _sum: DireccionFavoritaSumAggregateOutputType | null
    _min: DireccionFavoritaMinAggregateOutputType | null
    _max: DireccionFavoritaMaxAggregateOutputType | null
  }

  type GetDireccionFavoritaGroupByPayload<T extends DireccionFavoritaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DireccionFavoritaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DireccionFavoritaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DireccionFavoritaGroupByOutputType[P]>
            : GetScalarType<T[P], DireccionFavoritaGroupByOutputType[P]>
        }
      >
    >


  export type DireccionFavoritaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    direccionFavorita?: boolean
    fechaAgregado?: boolean
    categoria?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccionFavorita"]>

  export type DireccionFavoritaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    direccionFavorita?: boolean
    fechaAgregado?: boolean
    categoria?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccionFavorita"]>

  export type DireccionFavoritaSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    direccionFavorita?: boolean
    fechaAgregado?: boolean
    categoria?: boolean
  }

  export type DireccionFavoritaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type DireccionFavoritaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $DireccionFavoritaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DireccionFavorita"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      direccionFavorita: string
      fechaAgregado: Date
      categoria: string | null
    }, ExtArgs["result"]["direccionFavorita"]>
    composites: {}
  }

  type DireccionFavoritaGetPayload<S extends boolean | null | undefined | DireccionFavoritaDefaultArgs> = $Result.GetResult<Prisma.$DireccionFavoritaPayload, S>

  type DireccionFavoritaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DireccionFavoritaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DireccionFavoritaCountAggregateInputType | true
    }

  export interface DireccionFavoritaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DireccionFavorita'], meta: { name: 'DireccionFavorita' } }
    /**
     * Find zero or one DireccionFavorita that matches the filter.
     * @param {DireccionFavoritaFindUniqueArgs} args - Arguments to find a DireccionFavorita
     * @example
     * // Get one DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DireccionFavoritaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaFindUniqueArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DireccionFavorita that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DireccionFavoritaFindUniqueOrThrowArgs} args - Arguments to find a DireccionFavorita
     * @example
     * // Get one DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DireccionFavoritaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DireccionFavorita that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaFindFirstArgs} args - Arguments to find a DireccionFavorita
     * @example
     * // Get one DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DireccionFavoritaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaFindFirstArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DireccionFavorita that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaFindFirstOrThrowArgs} args - Arguments to find a DireccionFavorita
     * @example
     * // Get one DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DireccionFavoritaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DireccionFavoritas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DireccionFavoritas
     * const direccionFavoritas = await prisma.direccionFavorita.findMany()
     * 
     * // Get first 10 DireccionFavoritas
     * const direccionFavoritas = await prisma.direccionFavorita.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const direccionFavoritaWithIdOnly = await prisma.direccionFavorita.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DireccionFavoritaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DireccionFavorita.
     * @param {DireccionFavoritaCreateArgs} args - Arguments to create a DireccionFavorita.
     * @example
     * // Create one DireccionFavorita
     * const DireccionFavorita = await prisma.direccionFavorita.create({
     *   data: {
     *     // ... data to create a DireccionFavorita
     *   }
     * })
     * 
    **/
    create<T extends DireccionFavoritaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaCreateArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DireccionFavoritas.
     * @param {DireccionFavoritaCreateManyArgs} args - Arguments to create many DireccionFavoritas.
     * @example
     * // Create many DireccionFavoritas
     * const direccionFavorita = await prisma.direccionFavorita.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DireccionFavoritaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DireccionFavoritas and returns the data saved in the database.
     * @param {DireccionFavoritaCreateManyAndReturnArgs} args - Arguments to create many DireccionFavoritas.
     * @example
     * // Create many DireccionFavoritas
     * const direccionFavorita = await prisma.direccionFavorita.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DireccionFavoritas and only return the `id`
     * const direccionFavoritaWithIdOnly = await prisma.direccionFavorita.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DireccionFavoritaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a DireccionFavorita.
     * @param {DireccionFavoritaDeleteArgs} args - Arguments to delete one DireccionFavorita.
     * @example
     * // Delete one DireccionFavorita
     * const DireccionFavorita = await prisma.direccionFavorita.delete({
     *   where: {
     *     // ... filter to delete one DireccionFavorita
     *   }
     * })
     * 
    **/
    delete<T extends DireccionFavoritaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaDeleteArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DireccionFavorita.
     * @param {DireccionFavoritaUpdateArgs} args - Arguments to update one DireccionFavorita.
     * @example
     * // Update one DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DireccionFavoritaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaUpdateArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DireccionFavoritas.
     * @param {DireccionFavoritaDeleteManyArgs} args - Arguments to filter DireccionFavoritas to delete.
     * @example
     * // Delete a few DireccionFavoritas
     * const { count } = await prisma.direccionFavorita.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DireccionFavoritaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DireccionFavoritaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DireccionFavoritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DireccionFavoritas
     * const direccionFavorita = await prisma.direccionFavorita.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DireccionFavoritaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DireccionFavorita.
     * @param {DireccionFavoritaUpsertArgs} args - Arguments to update or create a DireccionFavorita.
     * @example
     * // Update or create a DireccionFavorita
     * const direccionFavorita = await prisma.direccionFavorita.upsert({
     *   create: {
     *     // ... data to create a DireccionFavorita
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DireccionFavorita we want to update
     *   }
     * })
    **/
    upsert<T extends DireccionFavoritaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DireccionFavoritaUpsertArgs<ExtArgs>>
    ): Prisma__DireccionFavoritaClient<$Result.GetResult<Prisma.$DireccionFavoritaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DireccionFavoritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaCountArgs} args - Arguments to filter DireccionFavoritas to count.
     * @example
     * // Count the number of DireccionFavoritas
     * const count = await prisma.direccionFavorita.count({
     *   where: {
     *     // ... the filter for the DireccionFavoritas we want to count
     *   }
     * })
    **/
    count<T extends DireccionFavoritaCountArgs>(
      args?: Subset<T, DireccionFavoritaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DireccionFavoritaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DireccionFavorita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DireccionFavoritaAggregateArgs>(args: Subset<T, DireccionFavoritaAggregateArgs>): Prisma.PrismaPromise<GetDireccionFavoritaAggregateType<T>>

    /**
     * Group by DireccionFavorita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFavoritaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DireccionFavoritaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DireccionFavoritaGroupByArgs['orderBy'] }
        : { orderBy?: DireccionFavoritaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DireccionFavoritaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccionFavoritaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DireccionFavorita model
   */
  readonly fields: DireccionFavoritaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DireccionFavorita.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DireccionFavoritaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the DireccionFavorita model
   */ 
  interface DireccionFavoritaFieldRefs {
    readonly id: FieldRef<"DireccionFavorita", 'Int'>
    readonly usuarioId: FieldRef<"DireccionFavorita", 'Int'>
    readonly direccionFavorita: FieldRef<"DireccionFavorita", 'String'>
    readonly fechaAgregado: FieldRef<"DireccionFavorita", 'DateTime'>
    readonly categoria: FieldRef<"DireccionFavorita", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DireccionFavorita findUnique
   */
  export type DireccionFavoritaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionFavorita to fetch.
     */
    where: DireccionFavoritaWhereUniqueInput
  }

  /**
   * DireccionFavorita findUniqueOrThrow
   */
  export type DireccionFavoritaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionFavorita to fetch.
     */
    where: DireccionFavoritaWhereUniqueInput
  }

  /**
   * DireccionFavorita findFirst
   */
  export type DireccionFavoritaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionFavorita to fetch.
     */
    where?: DireccionFavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionFavoritas to fetch.
     */
    orderBy?: DireccionFavoritaOrderByWithRelationInput | DireccionFavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DireccionFavoritas.
     */
    cursor?: DireccionFavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionFavoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionFavoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DireccionFavoritas.
     */
    distinct?: DireccionFavoritaScalarFieldEnum | DireccionFavoritaScalarFieldEnum[]
  }

  /**
   * DireccionFavorita findFirstOrThrow
   */
  export type DireccionFavoritaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionFavorita to fetch.
     */
    where?: DireccionFavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionFavoritas to fetch.
     */
    orderBy?: DireccionFavoritaOrderByWithRelationInput | DireccionFavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DireccionFavoritas.
     */
    cursor?: DireccionFavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionFavoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionFavoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DireccionFavoritas.
     */
    distinct?: DireccionFavoritaScalarFieldEnum | DireccionFavoritaScalarFieldEnum[]
  }

  /**
   * DireccionFavorita findMany
   */
  export type DireccionFavoritaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter, which DireccionFavoritas to fetch.
     */
    where?: DireccionFavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DireccionFavoritas to fetch.
     */
    orderBy?: DireccionFavoritaOrderByWithRelationInput | DireccionFavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DireccionFavoritas.
     */
    cursor?: DireccionFavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DireccionFavoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DireccionFavoritas.
     */
    skip?: number
    distinct?: DireccionFavoritaScalarFieldEnum | DireccionFavoritaScalarFieldEnum[]
  }

  /**
   * DireccionFavorita create
   */
  export type DireccionFavoritaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * The data needed to create a DireccionFavorita.
     */
    data: XOR<DireccionFavoritaCreateInput, DireccionFavoritaUncheckedCreateInput>
  }

  /**
   * DireccionFavorita createMany
   */
  export type DireccionFavoritaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DireccionFavoritas.
     */
    data: DireccionFavoritaCreateManyInput | DireccionFavoritaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DireccionFavorita createManyAndReturn
   */
  export type DireccionFavoritaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DireccionFavoritas.
     */
    data: DireccionFavoritaCreateManyInput | DireccionFavoritaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DireccionFavorita update
   */
  export type DireccionFavoritaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * The data needed to update a DireccionFavorita.
     */
    data: XOR<DireccionFavoritaUpdateInput, DireccionFavoritaUncheckedUpdateInput>
    /**
     * Choose, which DireccionFavorita to update.
     */
    where: DireccionFavoritaWhereUniqueInput
  }

  /**
   * DireccionFavorita updateMany
   */
  export type DireccionFavoritaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DireccionFavoritas.
     */
    data: XOR<DireccionFavoritaUpdateManyMutationInput, DireccionFavoritaUncheckedUpdateManyInput>
    /**
     * Filter which DireccionFavoritas to update
     */
    where?: DireccionFavoritaWhereInput
  }

  /**
   * DireccionFavorita upsert
   */
  export type DireccionFavoritaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * The filter to search for the DireccionFavorita to update in case it exists.
     */
    where: DireccionFavoritaWhereUniqueInput
    /**
     * In case the DireccionFavorita found by the `where` argument doesn't exist, create a new DireccionFavorita with this data.
     */
    create: XOR<DireccionFavoritaCreateInput, DireccionFavoritaUncheckedCreateInput>
    /**
     * In case the DireccionFavorita was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DireccionFavoritaUpdateInput, DireccionFavoritaUncheckedUpdateInput>
  }

  /**
   * DireccionFavorita delete
   */
  export type DireccionFavoritaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
    /**
     * Filter which DireccionFavorita to delete.
     */
    where: DireccionFavoritaWhereUniqueInput
  }

  /**
   * DireccionFavorita deleteMany
   */
  export type DireccionFavoritaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DireccionFavoritas to delete
     */
    where?: DireccionFavoritaWhereInput
  }

  /**
   * DireccionFavorita without action
   */
  export type DireccionFavoritaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionFavorita
     */
    select?: DireccionFavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionFavoritaInclude<ExtArgs> | null
  }


  /**
   * Model TemaCorreo
   */

  export type AggregateTemaCorreo = {
    _count: TemaCorreoCountAggregateOutputType | null
    _avg: TemaCorreoAvgAggregateOutputType | null
    _sum: TemaCorreoSumAggregateOutputType | null
    _min: TemaCorreoMinAggregateOutputType | null
    _max: TemaCorreoMaxAggregateOutputType | null
  }

  export type TemaCorreoAvgAggregateOutputType = {
    id: number | null
  }

  export type TemaCorreoSumAggregateOutputType = {
    id: number | null
  }

  export type TemaCorreoMinAggregateOutputType = {
    id: number | null
    nombreTema: string | null
  }

  export type TemaCorreoMaxAggregateOutputType = {
    id: number | null
    nombreTema: string | null
  }

  export type TemaCorreoCountAggregateOutputType = {
    id: number
    nombreTema: number
    _all: number
  }


  export type TemaCorreoAvgAggregateInputType = {
    id?: true
  }

  export type TemaCorreoSumAggregateInputType = {
    id?: true
  }

  export type TemaCorreoMinAggregateInputType = {
    id?: true
    nombreTema?: true
  }

  export type TemaCorreoMaxAggregateInputType = {
    id?: true
    nombreTema?: true
  }

  export type TemaCorreoCountAggregateInputType = {
    id?: true
    nombreTema?: true
    _all?: true
  }

  export type TemaCorreoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TemaCorreo to aggregate.
     */
    where?: TemaCorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemaCorreos to fetch.
     */
    orderBy?: TemaCorreoOrderByWithRelationInput | TemaCorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TemaCorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemaCorreos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemaCorreos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TemaCorreos
    **/
    _count?: true | TemaCorreoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TemaCorreoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TemaCorreoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TemaCorreoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TemaCorreoMaxAggregateInputType
  }

  export type GetTemaCorreoAggregateType<T extends TemaCorreoAggregateArgs> = {
        [P in keyof T & keyof AggregateTemaCorreo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTemaCorreo[P]>
      : GetScalarType<T[P], AggregateTemaCorreo[P]>
  }




  export type TemaCorreoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TemaCorreoWhereInput
    orderBy?: TemaCorreoOrderByWithAggregationInput | TemaCorreoOrderByWithAggregationInput[]
    by: TemaCorreoScalarFieldEnum[] | TemaCorreoScalarFieldEnum
    having?: TemaCorreoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TemaCorreoCountAggregateInputType | true
    _avg?: TemaCorreoAvgAggregateInputType
    _sum?: TemaCorreoSumAggregateInputType
    _min?: TemaCorreoMinAggregateInputType
    _max?: TemaCorreoMaxAggregateInputType
  }

  export type TemaCorreoGroupByOutputType = {
    id: number
    nombreTema: string
    _count: TemaCorreoCountAggregateOutputType | null
    _avg: TemaCorreoAvgAggregateOutputType | null
    _sum: TemaCorreoSumAggregateOutputType | null
    _min: TemaCorreoMinAggregateOutputType | null
    _max: TemaCorreoMaxAggregateOutputType | null
  }

  type GetTemaCorreoGroupByPayload<T extends TemaCorreoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TemaCorreoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TemaCorreoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TemaCorreoGroupByOutputType[P]>
            : GetScalarType<T[P], TemaCorreoGroupByOutputType[P]>
        }
      >
    >


  export type TemaCorreoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreTema?: boolean
    correos?: boolean | TemaCorreo$correosArgs<ExtArgs>
    _count?: boolean | TemaCorreoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["temaCorreo"]>

  export type TemaCorreoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreTema?: boolean
  }, ExtArgs["result"]["temaCorreo"]>

  export type TemaCorreoSelectScalar = {
    id?: boolean
    nombreTema?: boolean
  }

  export type TemaCorreoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos?: boolean | TemaCorreo$correosArgs<ExtArgs>
    _count?: boolean | TemaCorreoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TemaCorreoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TemaCorreoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TemaCorreo"
    objects: {
      correos: Prisma.$CorreoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreTema: string
    }, ExtArgs["result"]["temaCorreo"]>
    composites: {}
  }

  type TemaCorreoGetPayload<S extends boolean | null | undefined | TemaCorreoDefaultArgs> = $Result.GetResult<Prisma.$TemaCorreoPayload, S>

  type TemaCorreoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TemaCorreoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TemaCorreoCountAggregateInputType | true
    }

  export interface TemaCorreoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TemaCorreo'], meta: { name: 'TemaCorreo' } }
    /**
     * Find zero or one TemaCorreo that matches the filter.
     * @param {TemaCorreoFindUniqueArgs} args - Arguments to find a TemaCorreo
     * @example
     * // Get one TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TemaCorreoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoFindUniqueArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TemaCorreo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TemaCorreoFindUniqueOrThrowArgs} args - Arguments to find a TemaCorreo
     * @example
     * // Get one TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TemaCorreoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TemaCorreo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoFindFirstArgs} args - Arguments to find a TemaCorreo
     * @example
     * // Get one TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TemaCorreoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoFindFirstArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TemaCorreo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoFindFirstOrThrowArgs} args - Arguments to find a TemaCorreo
     * @example
     * // Get one TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TemaCorreoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TemaCorreos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TemaCorreos
     * const temaCorreos = await prisma.temaCorreo.findMany()
     * 
     * // Get first 10 TemaCorreos
     * const temaCorreos = await prisma.temaCorreo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const temaCorreoWithIdOnly = await prisma.temaCorreo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TemaCorreoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TemaCorreo.
     * @param {TemaCorreoCreateArgs} args - Arguments to create a TemaCorreo.
     * @example
     * // Create one TemaCorreo
     * const TemaCorreo = await prisma.temaCorreo.create({
     *   data: {
     *     // ... data to create a TemaCorreo
     *   }
     * })
     * 
    **/
    create<T extends TemaCorreoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoCreateArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TemaCorreos.
     * @param {TemaCorreoCreateManyArgs} args - Arguments to create many TemaCorreos.
     * @example
     * // Create many TemaCorreos
     * const temaCorreo = await prisma.temaCorreo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends TemaCorreoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TemaCorreos and returns the data saved in the database.
     * @param {TemaCorreoCreateManyAndReturnArgs} args - Arguments to create many TemaCorreos.
     * @example
     * // Create many TemaCorreos
     * const temaCorreo = await prisma.temaCorreo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TemaCorreos and only return the `id`
     * const temaCorreoWithIdOnly = await prisma.temaCorreo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends TemaCorreoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a TemaCorreo.
     * @param {TemaCorreoDeleteArgs} args - Arguments to delete one TemaCorreo.
     * @example
     * // Delete one TemaCorreo
     * const TemaCorreo = await prisma.temaCorreo.delete({
     *   where: {
     *     // ... filter to delete one TemaCorreo
     *   }
     * })
     * 
    **/
    delete<T extends TemaCorreoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoDeleteArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TemaCorreo.
     * @param {TemaCorreoUpdateArgs} args - Arguments to update one TemaCorreo.
     * @example
     * // Update one TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TemaCorreoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoUpdateArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TemaCorreos.
     * @param {TemaCorreoDeleteManyArgs} args - Arguments to filter TemaCorreos to delete.
     * @example
     * // Delete a few TemaCorreos
     * const { count } = await prisma.temaCorreo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TemaCorreoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TemaCorreoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TemaCorreos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TemaCorreos
     * const temaCorreo = await prisma.temaCorreo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TemaCorreoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TemaCorreo.
     * @param {TemaCorreoUpsertArgs} args - Arguments to update or create a TemaCorreo.
     * @example
     * // Update or create a TemaCorreo
     * const temaCorreo = await prisma.temaCorreo.upsert({
     *   create: {
     *     // ... data to create a TemaCorreo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TemaCorreo we want to update
     *   }
     * })
    **/
    upsert<T extends TemaCorreoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TemaCorreoUpsertArgs<ExtArgs>>
    ): Prisma__TemaCorreoClient<$Result.GetResult<Prisma.$TemaCorreoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TemaCorreos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoCountArgs} args - Arguments to filter TemaCorreos to count.
     * @example
     * // Count the number of TemaCorreos
     * const count = await prisma.temaCorreo.count({
     *   where: {
     *     // ... the filter for the TemaCorreos we want to count
     *   }
     * })
    **/
    count<T extends TemaCorreoCountArgs>(
      args?: Subset<T, TemaCorreoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TemaCorreoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TemaCorreo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TemaCorreoAggregateArgs>(args: Subset<T, TemaCorreoAggregateArgs>): Prisma.PrismaPromise<GetTemaCorreoAggregateType<T>>

    /**
     * Group by TemaCorreo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemaCorreoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TemaCorreoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TemaCorreoGroupByArgs['orderBy'] }
        : { orderBy?: TemaCorreoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TemaCorreoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTemaCorreoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TemaCorreo model
   */
  readonly fields: TemaCorreoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TemaCorreo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TemaCorreoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    correos<T extends TemaCorreo$correosArgs<ExtArgs> = {}>(args?: Subset<T, TemaCorreo$correosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TemaCorreo model
   */ 
  interface TemaCorreoFieldRefs {
    readonly id: FieldRef<"TemaCorreo", 'Int'>
    readonly nombreTema: FieldRef<"TemaCorreo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TemaCorreo findUnique
   */
  export type TemaCorreoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter, which TemaCorreo to fetch.
     */
    where: TemaCorreoWhereUniqueInput
  }

  /**
   * TemaCorreo findUniqueOrThrow
   */
  export type TemaCorreoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter, which TemaCorreo to fetch.
     */
    where: TemaCorreoWhereUniqueInput
  }

  /**
   * TemaCorreo findFirst
   */
  export type TemaCorreoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter, which TemaCorreo to fetch.
     */
    where?: TemaCorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemaCorreos to fetch.
     */
    orderBy?: TemaCorreoOrderByWithRelationInput | TemaCorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TemaCorreos.
     */
    cursor?: TemaCorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemaCorreos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemaCorreos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TemaCorreos.
     */
    distinct?: TemaCorreoScalarFieldEnum | TemaCorreoScalarFieldEnum[]
  }

  /**
   * TemaCorreo findFirstOrThrow
   */
  export type TemaCorreoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter, which TemaCorreo to fetch.
     */
    where?: TemaCorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemaCorreos to fetch.
     */
    orderBy?: TemaCorreoOrderByWithRelationInput | TemaCorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TemaCorreos.
     */
    cursor?: TemaCorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemaCorreos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemaCorreos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TemaCorreos.
     */
    distinct?: TemaCorreoScalarFieldEnum | TemaCorreoScalarFieldEnum[]
  }

  /**
   * TemaCorreo findMany
   */
  export type TemaCorreoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter, which TemaCorreos to fetch.
     */
    where?: TemaCorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemaCorreos to fetch.
     */
    orderBy?: TemaCorreoOrderByWithRelationInput | TemaCorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TemaCorreos.
     */
    cursor?: TemaCorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemaCorreos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemaCorreos.
     */
    skip?: number
    distinct?: TemaCorreoScalarFieldEnum | TemaCorreoScalarFieldEnum[]
  }

  /**
   * TemaCorreo create
   */
  export type TemaCorreoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * The data needed to create a TemaCorreo.
     */
    data: XOR<TemaCorreoCreateInput, TemaCorreoUncheckedCreateInput>
  }

  /**
   * TemaCorreo createMany
   */
  export type TemaCorreoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TemaCorreos.
     */
    data: TemaCorreoCreateManyInput | TemaCorreoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TemaCorreo createManyAndReturn
   */
  export type TemaCorreoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TemaCorreos.
     */
    data: TemaCorreoCreateManyInput | TemaCorreoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TemaCorreo update
   */
  export type TemaCorreoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * The data needed to update a TemaCorreo.
     */
    data: XOR<TemaCorreoUpdateInput, TemaCorreoUncheckedUpdateInput>
    /**
     * Choose, which TemaCorreo to update.
     */
    where: TemaCorreoWhereUniqueInput
  }

  /**
   * TemaCorreo updateMany
   */
  export type TemaCorreoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TemaCorreos.
     */
    data: XOR<TemaCorreoUpdateManyMutationInput, TemaCorreoUncheckedUpdateManyInput>
    /**
     * Filter which TemaCorreos to update
     */
    where?: TemaCorreoWhereInput
  }

  /**
   * TemaCorreo upsert
   */
  export type TemaCorreoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * The filter to search for the TemaCorreo to update in case it exists.
     */
    where: TemaCorreoWhereUniqueInput
    /**
     * In case the TemaCorreo found by the `where` argument doesn't exist, create a new TemaCorreo with this data.
     */
    create: XOR<TemaCorreoCreateInput, TemaCorreoUncheckedCreateInput>
    /**
     * In case the TemaCorreo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TemaCorreoUpdateInput, TemaCorreoUncheckedUpdateInput>
  }

  /**
   * TemaCorreo delete
   */
  export type TemaCorreoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
    /**
     * Filter which TemaCorreo to delete.
     */
    where: TemaCorreoWhereUniqueInput
  }

  /**
   * TemaCorreo deleteMany
   */
  export type TemaCorreoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TemaCorreos to delete
     */
    where?: TemaCorreoWhereInput
  }

  /**
   * TemaCorreo.correos
   */
  export type TemaCorreo$correosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * TemaCorreo without action
   */
  export type TemaCorreoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemaCorreo
     */
    select?: TemaCorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemaCorreoInclude<ExtArgs> | null
  }


  /**
   * Model EstiloFirma
   */

  export type AggregateEstiloFirma = {
    _count: EstiloFirmaCountAggregateOutputType | null
    _avg: EstiloFirmaAvgAggregateOutputType | null
    _sum: EstiloFirmaSumAggregateOutputType | null
    _min: EstiloFirmaMinAggregateOutputType | null
    _max: EstiloFirmaMaxAggregateOutputType | null
  }

  export type EstiloFirmaAvgAggregateOutputType = {
    id: number | null
  }

  export type EstiloFirmaSumAggregateOutputType = {
    id: number | null
  }

  export type EstiloFirmaMinAggregateOutputType = {
    id: number | null
    nombreEstilo: string | null
    fuente: string | null
  }

  export type EstiloFirmaMaxAggregateOutputType = {
    id: number | null
    nombreEstilo: string | null
    fuente: string | null
  }

  export type EstiloFirmaCountAggregateOutputType = {
    id: number
    nombreEstilo: number
    fuente: number
    _all: number
  }


  export type EstiloFirmaAvgAggregateInputType = {
    id?: true
  }

  export type EstiloFirmaSumAggregateInputType = {
    id?: true
  }

  export type EstiloFirmaMinAggregateInputType = {
    id?: true
    nombreEstilo?: true
    fuente?: true
  }

  export type EstiloFirmaMaxAggregateInputType = {
    id?: true
    nombreEstilo?: true
    fuente?: true
  }

  export type EstiloFirmaCountAggregateInputType = {
    id?: true
    nombreEstilo?: true
    fuente?: true
    _all?: true
  }

  export type EstiloFirmaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstiloFirma to aggregate.
     */
    where?: EstiloFirmaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstiloFirmas to fetch.
     */
    orderBy?: EstiloFirmaOrderByWithRelationInput | EstiloFirmaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstiloFirmaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstiloFirmas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstiloFirmas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstiloFirmas
    **/
    _count?: true | EstiloFirmaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstiloFirmaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstiloFirmaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstiloFirmaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstiloFirmaMaxAggregateInputType
  }

  export type GetEstiloFirmaAggregateType<T extends EstiloFirmaAggregateArgs> = {
        [P in keyof T & keyof AggregateEstiloFirma]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstiloFirma[P]>
      : GetScalarType<T[P], AggregateEstiloFirma[P]>
  }




  export type EstiloFirmaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstiloFirmaWhereInput
    orderBy?: EstiloFirmaOrderByWithAggregationInput | EstiloFirmaOrderByWithAggregationInput[]
    by: EstiloFirmaScalarFieldEnum[] | EstiloFirmaScalarFieldEnum
    having?: EstiloFirmaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstiloFirmaCountAggregateInputType | true
    _avg?: EstiloFirmaAvgAggregateInputType
    _sum?: EstiloFirmaSumAggregateInputType
    _min?: EstiloFirmaMinAggregateInputType
    _max?: EstiloFirmaMaxAggregateInputType
  }

  export type EstiloFirmaGroupByOutputType = {
    id: number
    nombreEstilo: string
    fuente: string
    _count: EstiloFirmaCountAggregateOutputType | null
    _avg: EstiloFirmaAvgAggregateOutputType | null
    _sum: EstiloFirmaSumAggregateOutputType | null
    _min: EstiloFirmaMinAggregateOutputType | null
    _max: EstiloFirmaMaxAggregateOutputType | null
  }

  type GetEstiloFirmaGroupByPayload<T extends EstiloFirmaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstiloFirmaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstiloFirmaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstiloFirmaGroupByOutputType[P]>
            : GetScalarType<T[P], EstiloFirmaGroupByOutputType[P]>
        }
      >
    >


  export type EstiloFirmaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreEstilo?: boolean
    fuente?: boolean
    correos?: boolean | EstiloFirma$correosArgs<ExtArgs>
    _count?: boolean | EstiloFirmaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estiloFirma"]>

  export type EstiloFirmaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreEstilo?: boolean
    fuente?: boolean
  }, ExtArgs["result"]["estiloFirma"]>

  export type EstiloFirmaSelectScalar = {
    id?: boolean
    nombreEstilo?: boolean
    fuente?: boolean
  }

  export type EstiloFirmaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos?: boolean | EstiloFirma$correosArgs<ExtArgs>
    _count?: boolean | EstiloFirmaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstiloFirmaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstiloFirmaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstiloFirma"
    objects: {
      correos: Prisma.$CorreoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombreEstilo: string
      fuente: string
    }, ExtArgs["result"]["estiloFirma"]>
    composites: {}
  }

  type EstiloFirmaGetPayload<S extends boolean | null | undefined | EstiloFirmaDefaultArgs> = $Result.GetResult<Prisma.$EstiloFirmaPayload, S>

  type EstiloFirmaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EstiloFirmaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EstiloFirmaCountAggregateInputType | true
    }

  export interface EstiloFirmaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstiloFirma'], meta: { name: 'EstiloFirma' } }
    /**
     * Find zero or one EstiloFirma that matches the filter.
     * @param {EstiloFirmaFindUniqueArgs} args - Arguments to find a EstiloFirma
     * @example
     * // Get one EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EstiloFirmaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaFindUniqueArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one EstiloFirma that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EstiloFirmaFindUniqueOrThrowArgs} args - Arguments to find a EstiloFirma
     * @example
     * // Get one EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EstiloFirmaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first EstiloFirma that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaFindFirstArgs} args - Arguments to find a EstiloFirma
     * @example
     * // Get one EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EstiloFirmaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaFindFirstArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first EstiloFirma that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaFindFirstOrThrowArgs} args - Arguments to find a EstiloFirma
     * @example
     * // Get one EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EstiloFirmaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more EstiloFirmas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstiloFirmas
     * const estiloFirmas = await prisma.estiloFirma.findMany()
     * 
     * // Get first 10 EstiloFirmas
     * const estiloFirmas = await prisma.estiloFirma.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estiloFirmaWithIdOnly = await prisma.estiloFirma.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EstiloFirmaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a EstiloFirma.
     * @param {EstiloFirmaCreateArgs} args - Arguments to create a EstiloFirma.
     * @example
     * // Create one EstiloFirma
     * const EstiloFirma = await prisma.estiloFirma.create({
     *   data: {
     *     // ... data to create a EstiloFirma
     *   }
     * })
     * 
    **/
    create<T extends EstiloFirmaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaCreateArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many EstiloFirmas.
     * @param {EstiloFirmaCreateManyArgs} args - Arguments to create many EstiloFirmas.
     * @example
     * // Create many EstiloFirmas
     * const estiloFirma = await prisma.estiloFirma.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends EstiloFirmaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstiloFirmas and returns the data saved in the database.
     * @param {EstiloFirmaCreateManyAndReturnArgs} args - Arguments to create many EstiloFirmas.
     * @example
     * // Create many EstiloFirmas
     * const estiloFirma = await prisma.estiloFirma.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstiloFirmas and only return the `id`
     * const estiloFirmaWithIdOnly = await prisma.estiloFirma.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends EstiloFirmaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a EstiloFirma.
     * @param {EstiloFirmaDeleteArgs} args - Arguments to delete one EstiloFirma.
     * @example
     * // Delete one EstiloFirma
     * const EstiloFirma = await prisma.estiloFirma.delete({
     *   where: {
     *     // ... filter to delete one EstiloFirma
     *   }
     * })
     * 
    **/
    delete<T extends EstiloFirmaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaDeleteArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one EstiloFirma.
     * @param {EstiloFirmaUpdateArgs} args - Arguments to update one EstiloFirma.
     * @example
     * // Update one EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EstiloFirmaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaUpdateArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more EstiloFirmas.
     * @param {EstiloFirmaDeleteManyArgs} args - Arguments to filter EstiloFirmas to delete.
     * @example
     * // Delete a few EstiloFirmas
     * const { count } = await prisma.estiloFirma.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EstiloFirmaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EstiloFirmaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstiloFirmas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstiloFirmas
     * const estiloFirma = await prisma.estiloFirma.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EstiloFirmaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EstiloFirma.
     * @param {EstiloFirmaUpsertArgs} args - Arguments to update or create a EstiloFirma.
     * @example
     * // Update or create a EstiloFirma
     * const estiloFirma = await prisma.estiloFirma.upsert({
     *   create: {
     *     // ... data to create a EstiloFirma
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstiloFirma we want to update
     *   }
     * })
    **/
    upsert<T extends EstiloFirmaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EstiloFirmaUpsertArgs<ExtArgs>>
    ): Prisma__EstiloFirmaClient<$Result.GetResult<Prisma.$EstiloFirmaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of EstiloFirmas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaCountArgs} args - Arguments to filter EstiloFirmas to count.
     * @example
     * // Count the number of EstiloFirmas
     * const count = await prisma.estiloFirma.count({
     *   where: {
     *     // ... the filter for the EstiloFirmas we want to count
     *   }
     * })
    **/
    count<T extends EstiloFirmaCountArgs>(
      args?: Subset<T, EstiloFirmaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstiloFirmaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstiloFirma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstiloFirmaAggregateArgs>(args: Subset<T, EstiloFirmaAggregateArgs>): Prisma.PrismaPromise<GetEstiloFirmaAggregateType<T>>

    /**
     * Group by EstiloFirma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstiloFirmaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstiloFirmaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstiloFirmaGroupByArgs['orderBy'] }
        : { orderBy?: EstiloFirmaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstiloFirmaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstiloFirmaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstiloFirma model
   */
  readonly fields: EstiloFirmaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstiloFirma.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstiloFirmaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    correos<T extends EstiloFirma$correosArgs<ExtArgs> = {}>(args?: Subset<T, EstiloFirma$correosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the EstiloFirma model
   */ 
  interface EstiloFirmaFieldRefs {
    readonly id: FieldRef<"EstiloFirma", 'Int'>
    readonly nombreEstilo: FieldRef<"EstiloFirma", 'String'>
    readonly fuente: FieldRef<"EstiloFirma", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EstiloFirma findUnique
   */
  export type EstiloFirmaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter, which EstiloFirma to fetch.
     */
    where: EstiloFirmaWhereUniqueInput
  }

  /**
   * EstiloFirma findUniqueOrThrow
   */
  export type EstiloFirmaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter, which EstiloFirma to fetch.
     */
    where: EstiloFirmaWhereUniqueInput
  }

  /**
   * EstiloFirma findFirst
   */
  export type EstiloFirmaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter, which EstiloFirma to fetch.
     */
    where?: EstiloFirmaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstiloFirmas to fetch.
     */
    orderBy?: EstiloFirmaOrderByWithRelationInput | EstiloFirmaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstiloFirmas.
     */
    cursor?: EstiloFirmaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstiloFirmas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstiloFirmas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstiloFirmas.
     */
    distinct?: EstiloFirmaScalarFieldEnum | EstiloFirmaScalarFieldEnum[]
  }

  /**
   * EstiloFirma findFirstOrThrow
   */
  export type EstiloFirmaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter, which EstiloFirma to fetch.
     */
    where?: EstiloFirmaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstiloFirmas to fetch.
     */
    orderBy?: EstiloFirmaOrderByWithRelationInput | EstiloFirmaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstiloFirmas.
     */
    cursor?: EstiloFirmaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstiloFirmas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstiloFirmas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstiloFirmas.
     */
    distinct?: EstiloFirmaScalarFieldEnum | EstiloFirmaScalarFieldEnum[]
  }

  /**
   * EstiloFirma findMany
   */
  export type EstiloFirmaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter, which EstiloFirmas to fetch.
     */
    where?: EstiloFirmaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstiloFirmas to fetch.
     */
    orderBy?: EstiloFirmaOrderByWithRelationInput | EstiloFirmaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstiloFirmas.
     */
    cursor?: EstiloFirmaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstiloFirmas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstiloFirmas.
     */
    skip?: number
    distinct?: EstiloFirmaScalarFieldEnum | EstiloFirmaScalarFieldEnum[]
  }

  /**
   * EstiloFirma create
   */
  export type EstiloFirmaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * The data needed to create a EstiloFirma.
     */
    data: XOR<EstiloFirmaCreateInput, EstiloFirmaUncheckedCreateInput>
  }

  /**
   * EstiloFirma createMany
   */
  export type EstiloFirmaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstiloFirmas.
     */
    data: EstiloFirmaCreateManyInput | EstiloFirmaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstiloFirma createManyAndReturn
   */
  export type EstiloFirmaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EstiloFirmas.
     */
    data: EstiloFirmaCreateManyInput | EstiloFirmaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstiloFirma update
   */
  export type EstiloFirmaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * The data needed to update a EstiloFirma.
     */
    data: XOR<EstiloFirmaUpdateInput, EstiloFirmaUncheckedUpdateInput>
    /**
     * Choose, which EstiloFirma to update.
     */
    where: EstiloFirmaWhereUniqueInput
  }

  /**
   * EstiloFirma updateMany
   */
  export type EstiloFirmaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstiloFirmas.
     */
    data: XOR<EstiloFirmaUpdateManyMutationInput, EstiloFirmaUncheckedUpdateManyInput>
    /**
     * Filter which EstiloFirmas to update
     */
    where?: EstiloFirmaWhereInput
  }

  /**
   * EstiloFirma upsert
   */
  export type EstiloFirmaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * The filter to search for the EstiloFirma to update in case it exists.
     */
    where: EstiloFirmaWhereUniqueInput
    /**
     * In case the EstiloFirma found by the `where` argument doesn't exist, create a new EstiloFirma with this data.
     */
    create: XOR<EstiloFirmaCreateInput, EstiloFirmaUncheckedCreateInput>
    /**
     * In case the EstiloFirma was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstiloFirmaUpdateInput, EstiloFirmaUncheckedUpdateInput>
  }

  /**
   * EstiloFirma delete
   */
  export type EstiloFirmaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
    /**
     * Filter which EstiloFirma to delete.
     */
    where: EstiloFirmaWhereUniqueInput
  }

  /**
   * EstiloFirma deleteMany
   */
  export type EstiloFirmaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstiloFirmas to delete
     */
    where?: EstiloFirmaWhereInput
  }

  /**
   * EstiloFirma.correos
   */
  export type EstiloFirma$correosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * EstiloFirma without action
   */
  export type EstiloFirmaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstiloFirma
     */
    select?: EstiloFirmaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstiloFirmaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    correo: 'correo',
    clave: 'clave',
    descripcion: 'descripcion',
    fechaCreacion: 'fechaCreacion'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CorreoScalarFieldEnum: {
    id: 'id',
    remitenteId: 'remitenteId',
    destinatarioId: 'destinatarioId',
    asunto: 'asunto',
    cuerpo: 'cuerpo',
    fechaEnvio: 'fechaEnvio',
    leido: 'leido',
    esFavorito: 'esFavorito',
    colorFondo: 'colorFondo',
    nombreAnimacion: 'nombreAnimacion',
    duracionAnimacion: 'duracionAnimacion',
    contenidoAnuncio: 'contenidoAnuncio',
    fechaMostradoAnuncio: 'fechaMostradoAnuncio',
    estiloFirmaId: 'estiloFirmaId',
    temaId: 'temaId'
  };

  export type CorreoScalarFieldEnum = (typeof CorreoScalarFieldEnum)[keyof typeof CorreoScalarFieldEnum]


  export const DireccionBloqueadaScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    direccionBloqueada: 'direccionBloqueada',
    fechaBloqueo: 'fechaBloqueo'
  };

  export type DireccionBloqueadaScalarFieldEnum = (typeof DireccionBloqueadaScalarFieldEnum)[keyof typeof DireccionBloqueadaScalarFieldEnum]


  export const DireccionFavoritaScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    direccionFavorita: 'direccionFavorita',
    fechaAgregado: 'fechaAgregado',
    categoria: 'categoria'
  };

  export type DireccionFavoritaScalarFieldEnum = (typeof DireccionFavoritaScalarFieldEnum)[keyof typeof DireccionFavoritaScalarFieldEnum]


  export const TemaCorreoScalarFieldEnum: {
    id: 'id',
    nombreTema: 'nombreTema'
  };

  export type TemaCorreoScalarFieldEnum = (typeof TemaCorreoScalarFieldEnum)[keyof typeof TemaCorreoScalarFieldEnum]


  export const EstiloFirmaScalarFieldEnum: {
    id: 'id',
    nombreEstilo: 'nombreEstilo',
    fuente: 'fuente'
  };

  export type EstiloFirmaScalarFieldEnum = (typeof EstiloFirmaScalarFieldEnum)[keyof typeof EstiloFirmaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    clave?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    fechaCreacion?: DateTimeFilter<"Usuario"> | Date | string
    correosEnviados?: CorreoListRelationFilter
    correosRecibidos?: CorreoListRelationFilter
    direccionesBloqueadas?: DireccionBloqueadaListRelationFilter
    direccionesFavoritas?: DireccionFavoritaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    correosEnviados?: CorreoOrderByRelationAggregateInput
    correosRecibidos?: CorreoOrderByRelationAggregateInput
    direccionesBloqueadas?: DireccionBloqueadaOrderByRelationAggregateInput
    direccionesFavoritas?: DireccionFavoritaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    clave?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    fechaCreacion?: DateTimeFilter<"Usuario"> | Date | string
    correosEnviados?: CorreoListRelationFilter
    correosRecibidos?: CorreoListRelationFilter
    direccionesBloqueadas?: DireccionBloqueadaListRelationFilter
    direccionesFavoritas?: DireccionFavoritaListRelationFilter
  }, "id" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    clave?: StringWithAggregatesFilter<"Usuario"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type CorreoWhereInput = {
    AND?: CorreoWhereInput | CorreoWhereInput[]
    OR?: CorreoWhereInput[]
    NOT?: CorreoWhereInput | CorreoWhereInput[]
    id?: IntFilter<"Correo"> | number
    remitenteId?: IntFilter<"Correo"> | number
    destinatarioId?: IntFilter<"Correo"> | number
    asunto?: StringFilter<"Correo"> | string
    cuerpo?: StringFilter<"Correo"> | string
    fechaEnvio?: DateTimeFilter<"Correo"> | Date | string
    leido?: BoolFilter<"Correo"> | boolean
    esFavorito?: BoolFilter<"Correo"> | boolean
    colorFondo?: StringNullableFilter<"Correo"> | string | null
    nombreAnimacion?: StringNullableFilter<"Correo"> | string | null
    duracionAnimacion?: IntNullableFilter<"Correo"> | number | null
    contenidoAnuncio?: StringNullableFilter<"Correo"> | string | null
    fechaMostradoAnuncio?: DateTimeNullableFilter<"Correo"> | Date | string | null
    estiloFirmaId?: IntNullableFilter<"Correo"> | number | null
    temaId?: IntNullableFilter<"Correo"> | number | null
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    estiloFirma?: XOR<EstiloFirmaNullableRelationFilter, EstiloFirmaWhereInput> | null
    tema?: XOR<TemaCorreoNullableRelationFilter, TemaCorreoWhereInput> | null
  }

  export type CorreoOrderByWithRelationInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    esFavorito?: SortOrder
    colorFondo?: SortOrderInput | SortOrder
    nombreAnimacion?: SortOrderInput | SortOrder
    duracionAnimacion?: SortOrderInput | SortOrder
    contenidoAnuncio?: SortOrderInput | SortOrder
    fechaMostradoAnuncio?: SortOrderInput | SortOrder
    estiloFirmaId?: SortOrderInput | SortOrder
    temaId?: SortOrderInput | SortOrder
    remitente?: UsuarioOrderByWithRelationInput
    destinatario?: UsuarioOrderByWithRelationInput
    estiloFirma?: EstiloFirmaOrderByWithRelationInput
    tema?: TemaCorreoOrderByWithRelationInput
  }

  export type CorreoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    estiloFirmaId?: number
    AND?: CorreoWhereInput | CorreoWhereInput[]
    OR?: CorreoWhereInput[]
    NOT?: CorreoWhereInput | CorreoWhereInput[]
    remitenteId?: IntFilter<"Correo"> | number
    destinatarioId?: IntFilter<"Correo"> | number
    asunto?: StringFilter<"Correo"> | string
    cuerpo?: StringFilter<"Correo"> | string
    fechaEnvio?: DateTimeFilter<"Correo"> | Date | string
    leido?: BoolFilter<"Correo"> | boolean
    esFavorito?: BoolFilter<"Correo"> | boolean
    colorFondo?: StringNullableFilter<"Correo"> | string | null
    nombreAnimacion?: StringNullableFilter<"Correo"> | string | null
    duracionAnimacion?: IntNullableFilter<"Correo"> | number | null
    contenidoAnuncio?: StringNullableFilter<"Correo"> | string | null
    fechaMostradoAnuncio?: DateTimeNullableFilter<"Correo"> | Date | string | null
    temaId?: IntNullableFilter<"Correo"> | number | null
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    estiloFirma?: XOR<EstiloFirmaNullableRelationFilter, EstiloFirmaWhereInput> | null
    tema?: XOR<TemaCorreoNullableRelationFilter, TemaCorreoWhereInput> | null
  }, "id" | "estiloFirmaId">

  export type CorreoOrderByWithAggregationInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    esFavorito?: SortOrder
    colorFondo?: SortOrderInput | SortOrder
    nombreAnimacion?: SortOrderInput | SortOrder
    duracionAnimacion?: SortOrderInput | SortOrder
    contenidoAnuncio?: SortOrderInput | SortOrder
    fechaMostradoAnuncio?: SortOrderInput | SortOrder
    estiloFirmaId?: SortOrderInput | SortOrder
    temaId?: SortOrderInput | SortOrder
    _count?: CorreoCountOrderByAggregateInput
    _avg?: CorreoAvgOrderByAggregateInput
    _max?: CorreoMaxOrderByAggregateInput
    _min?: CorreoMinOrderByAggregateInput
    _sum?: CorreoSumOrderByAggregateInput
  }

  export type CorreoScalarWhereWithAggregatesInput = {
    AND?: CorreoScalarWhereWithAggregatesInput | CorreoScalarWhereWithAggregatesInput[]
    OR?: CorreoScalarWhereWithAggregatesInput[]
    NOT?: CorreoScalarWhereWithAggregatesInput | CorreoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Correo"> | number
    remitenteId?: IntWithAggregatesFilter<"Correo"> | number
    destinatarioId?: IntWithAggregatesFilter<"Correo"> | number
    asunto?: StringWithAggregatesFilter<"Correo"> | string
    cuerpo?: StringWithAggregatesFilter<"Correo"> | string
    fechaEnvio?: DateTimeWithAggregatesFilter<"Correo"> | Date | string
    leido?: BoolWithAggregatesFilter<"Correo"> | boolean
    esFavorito?: BoolWithAggregatesFilter<"Correo"> | boolean
    colorFondo?: StringNullableWithAggregatesFilter<"Correo"> | string | null
    nombreAnimacion?: StringNullableWithAggregatesFilter<"Correo"> | string | null
    duracionAnimacion?: IntNullableWithAggregatesFilter<"Correo"> | number | null
    contenidoAnuncio?: StringNullableWithAggregatesFilter<"Correo"> | string | null
    fechaMostradoAnuncio?: DateTimeNullableWithAggregatesFilter<"Correo"> | Date | string | null
    estiloFirmaId?: IntNullableWithAggregatesFilter<"Correo"> | number | null
    temaId?: IntNullableWithAggregatesFilter<"Correo"> | number | null
  }

  export type DireccionBloqueadaWhereInput = {
    AND?: DireccionBloqueadaWhereInput | DireccionBloqueadaWhereInput[]
    OR?: DireccionBloqueadaWhereInput[]
    NOT?: DireccionBloqueadaWhereInput | DireccionBloqueadaWhereInput[]
    id?: IntFilter<"DireccionBloqueada"> | number
    usuarioId?: IntFilter<"DireccionBloqueada"> | number
    direccionBloqueada?: StringFilter<"DireccionBloqueada"> | string
    fechaBloqueo?: DateTimeFilter<"DireccionBloqueada"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type DireccionBloqueadaOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionBloqueada?: SortOrder
    fechaBloqueo?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DireccionBloqueadaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DireccionBloqueadaWhereInput | DireccionBloqueadaWhereInput[]
    OR?: DireccionBloqueadaWhereInput[]
    NOT?: DireccionBloqueadaWhereInput | DireccionBloqueadaWhereInput[]
    usuarioId?: IntFilter<"DireccionBloqueada"> | number
    direccionBloqueada?: StringFilter<"DireccionBloqueada"> | string
    fechaBloqueo?: DateTimeFilter<"DireccionBloqueada"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type DireccionBloqueadaOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionBloqueada?: SortOrder
    fechaBloqueo?: SortOrder
    _count?: DireccionBloqueadaCountOrderByAggregateInput
    _avg?: DireccionBloqueadaAvgOrderByAggregateInput
    _max?: DireccionBloqueadaMaxOrderByAggregateInput
    _min?: DireccionBloqueadaMinOrderByAggregateInput
    _sum?: DireccionBloqueadaSumOrderByAggregateInput
  }

  export type DireccionBloqueadaScalarWhereWithAggregatesInput = {
    AND?: DireccionBloqueadaScalarWhereWithAggregatesInput | DireccionBloqueadaScalarWhereWithAggregatesInput[]
    OR?: DireccionBloqueadaScalarWhereWithAggregatesInput[]
    NOT?: DireccionBloqueadaScalarWhereWithAggregatesInput | DireccionBloqueadaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DireccionBloqueada"> | number
    usuarioId?: IntWithAggregatesFilter<"DireccionBloqueada"> | number
    direccionBloqueada?: StringWithAggregatesFilter<"DireccionBloqueada"> | string
    fechaBloqueo?: DateTimeWithAggregatesFilter<"DireccionBloqueada"> | Date | string
  }

  export type DireccionFavoritaWhereInput = {
    AND?: DireccionFavoritaWhereInput | DireccionFavoritaWhereInput[]
    OR?: DireccionFavoritaWhereInput[]
    NOT?: DireccionFavoritaWhereInput | DireccionFavoritaWhereInput[]
    id?: IntFilter<"DireccionFavorita"> | number
    usuarioId?: IntFilter<"DireccionFavorita"> | number
    direccionFavorita?: StringFilter<"DireccionFavorita"> | string
    fechaAgregado?: DateTimeFilter<"DireccionFavorita"> | Date | string
    categoria?: StringNullableFilter<"DireccionFavorita"> | string | null
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type DireccionFavoritaOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionFavorita?: SortOrder
    fechaAgregado?: SortOrder
    categoria?: SortOrderInput | SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DireccionFavoritaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DireccionFavoritaWhereInput | DireccionFavoritaWhereInput[]
    OR?: DireccionFavoritaWhereInput[]
    NOT?: DireccionFavoritaWhereInput | DireccionFavoritaWhereInput[]
    usuarioId?: IntFilter<"DireccionFavorita"> | number
    direccionFavorita?: StringFilter<"DireccionFavorita"> | string
    fechaAgregado?: DateTimeFilter<"DireccionFavorita"> | Date | string
    categoria?: StringNullableFilter<"DireccionFavorita"> | string | null
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type DireccionFavoritaOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionFavorita?: SortOrder
    fechaAgregado?: SortOrder
    categoria?: SortOrderInput | SortOrder
    _count?: DireccionFavoritaCountOrderByAggregateInput
    _avg?: DireccionFavoritaAvgOrderByAggregateInput
    _max?: DireccionFavoritaMaxOrderByAggregateInput
    _min?: DireccionFavoritaMinOrderByAggregateInput
    _sum?: DireccionFavoritaSumOrderByAggregateInput
  }

  export type DireccionFavoritaScalarWhereWithAggregatesInput = {
    AND?: DireccionFavoritaScalarWhereWithAggregatesInput | DireccionFavoritaScalarWhereWithAggregatesInput[]
    OR?: DireccionFavoritaScalarWhereWithAggregatesInput[]
    NOT?: DireccionFavoritaScalarWhereWithAggregatesInput | DireccionFavoritaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DireccionFavorita"> | number
    usuarioId?: IntWithAggregatesFilter<"DireccionFavorita"> | number
    direccionFavorita?: StringWithAggregatesFilter<"DireccionFavorita"> | string
    fechaAgregado?: DateTimeWithAggregatesFilter<"DireccionFavorita"> | Date | string
    categoria?: StringNullableWithAggregatesFilter<"DireccionFavorita"> | string | null
  }

  export type TemaCorreoWhereInput = {
    AND?: TemaCorreoWhereInput | TemaCorreoWhereInput[]
    OR?: TemaCorreoWhereInput[]
    NOT?: TemaCorreoWhereInput | TemaCorreoWhereInput[]
    id?: IntFilter<"TemaCorreo"> | number
    nombreTema?: StringFilter<"TemaCorreo"> | string
    correos?: CorreoListRelationFilter
  }

  export type TemaCorreoOrderByWithRelationInput = {
    id?: SortOrder
    nombreTema?: SortOrder
    correos?: CorreoOrderByRelationAggregateInput
  }

  export type TemaCorreoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TemaCorreoWhereInput | TemaCorreoWhereInput[]
    OR?: TemaCorreoWhereInput[]
    NOT?: TemaCorreoWhereInput | TemaCorreoWhereInput[]
    nombreTema?: StringFilter<"TemaCorreo"> | string
    correos?: CorreoListRelationFilter
  }, "id">

  export type TemaCorreoOrderByWithAggregationInput = {
    id?: SortOrder
    nombreTema?: SortOrder
    _count?: TemaCorreoCountOrderByAggregateInput
    _avg?: TemaCorreoAvgOrderByAggregateInput
    _max?: TemaCorreoMaxOrderByAggregateInput
    _min?: TemaCorreoMinOrderByAggregateInput
    _sum?: TemaCorreoSumOrderByAggregateInput
  }

  export type TemaCorreoScalarWhereWithAggregatesInput = {
    AND?: TemaCorreoScalarWhereWithAggregatesInput | TemaCorreoScalarWhereWithAggregatesInput[]
    OR?: TemaCorreoScalarWhereWithAggregatesInput[]
    NOT?: TemaCorreoScalarWhereWithAggregatesInput | TemaCorreoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TemaCorreo"> | number
    nombreTema?: StringWithAggregatesFilter<"TemaCorreo"> | string
  }

  export type EstiloFirmaWhereInput = {
    AND?: EstiloFirmaWhereInput | EstiloFirmaWhereInput[]
    OR?: EstiloFirmaWhereInput[]
    NOT?: EstiloFirmaWhereInput | EstiloFirmaWhereInput[]
    id?: IntFilter<"EstiloFirma"> | number
    nombreEstilo?: StringFilter<"EstiloFirma"> | string
    fuente?: StringFilter<"EstiloFirma"> | string
    correos?: CorreoListRelationFilter
  }

  export type EstiloFirmaOrderByWithRelationInput = {
    id?: SortOrder
    nombreEstilo?: SortOrder
    fuente?: SortOrder
    correos?: CorreoOrderByRelationAggregateInput
  }

  export type EstiloFirmaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstiloFirmaWhereInput | EstiloFirmaWhereInput[]
    OR?: EstiloFirmaWhereInput[]
    NOT?: EstiloFirmaWhereInput | EstiloFirmaWhereInput[]
    nombreEstilo?: StringFilter<"EstiloFirma"> | string
    fuente?: StringFilter<"EstiloFirma"> | string
    correos?: CorreoListRelationFilter
  }, "id">

  export type EstiloFirmaOrderByWithAggregationInput = {
    id?: SortOrder
    nombreEstilo?: SortOrder
    fuente?: SortOrder
    _count?: EstiloFirmaCountOrderByAggregateInput
    _avg?: EstiloFirmaAvgOrderByAggregateInput
    _max?: EstiloFirmaMaxOrderByAggregateInput
    _min?: EstiloFirmaMinOrderByAggregateInput
    _sum?: EstiloFirmaSumOrderByAggregateInput
  }

  export type EstiloFirmaScalarWhereWithAggregatesInput = {
    AND?: EstiloFirmaScalarWhereWithAggregatesInput | EstiloFirmaScalarWhereWithAggregatesInput[]
    OR?: EstiloFirmaScalarWhereWithAggregatesInput[]
    NOT?: EstiloFirmaScalarWhereWithAggregatesInput | EstiloFirmaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstiloFirma"> | number
    nombreEstilo?: StringWithAggregatesFilter<"EstiloFirma"> | string
    fuente?: StringWithAggregatesFilter<"EstiloFirma"> | string
  }

  export type UsuarioCreateInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CorreoCreateInput = {
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    estiloFirma?: EstiloFirmaCreateNestedOneWithoutCorreosInput
    tema?: TemaCorreoCreateNestedOneWithoutCorreosInput
  }

  export type CorreoUncheckedCreateInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type CorreoUpdateInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    estiloFirma?: EstiloFirmaUpdateOneWithoutCorreosNestedInput
    tema?: TemaCorreoUpdateOneWithoutCorreosNestedInput
  }

  export type CorreoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoCreateManyInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type CorreoUpdateManyMutationInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CorreoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DireccionBloqueadaCreateInput = {
    direccionBloqueada: string
    fechaBloqueo?: Date | string
    usuario: UsuarioCreateNestedOneWithoutDireccionesBloqueadasInput
  }

  export type DireccionBloqueadaUncheckedCreateInput = {
    id?: number
    usuarioId: number
    direccionBloqueada: string
    fechaBloqueo?: Date | string
  }

  export type DireccionBloqueadaUpdateInput = {
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutDireccionesBloqueadasNestedInput
  }

  export type DireccionBloqueadaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionBloqueadaCreateManyInput = {
    id?: number
    usuarioId: number
    direccionBloqueada: string
    fechaBloqueo?: Date | string
  }

  export type DireccionBloqueadaUpdateManyMutationInput = {
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionBloqueadaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionFavoritaCreateInput = {
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
    usuario: UsuarioCreateNestedOneWithoutDireccionesFavoritasInput
  }

  export type DireccionFavoritaUncheckedCreateInput = {
    id?: number
    usuarioId: number
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
  }

  export type DireccionFavoritaUpdateInput = {
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutDireccionesFavoritasNestedInput
  }

  export type DireccionFavoritaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionFavoritaCreateManyInput = {
    id?: number
    usuarioId: number
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
  }

  export type DireccionFavoritaUpdateManyMutationInput = {
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionFavoritaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TemaCorreoCreateInput = {
    nombreTema: string
    correos?: CorreoCreateNestedManyWithoutTemaInput
  }

  export type TemaCorreoUncheckedCreateInput = {
    id?: number
    nombreTema: string
    correos?: CorreoUncheckedCreateNestedManyWithoutTemaInput
  }

  export type TemaCorreoUpdateInput = {
    nombreTema?: StringFieldUpdateOperationsInput | string
    correos?: CorreoUpdateManyWithoutTemaNestedInput
  }

  export type TemaCorreoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreTema?: StringFieldUpdateOperationsInput | string
    correos?: CorreoUncheckedUpdateManyWithoutTemaNestedInput
  }

  export type TemaCorreoCreateManyInput = {
    id?: number
    nombreTema: string
  }

  export type TemaCorreoUpdateManyMutationInput = {
    nombreTema?: StringFieldUpdateOperationsInput | string
  }

  export type TemaCorreoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreTema?: StringFieldUpdateOperationsInput | string
  }

  export type EstiloFirmaCreateInput = {
    nombreEstilo: string
    fuente: string
    correos?: CorreoCreateNestedManyWithoutEstiloFirmaInput
  }

  export type EstiloFirmaUncheckedCreateInput = {
    id?: number
    nombreEstilo: string
    fuente: string
    correos?: CorreoUncheckedCreateNestedManyWithoutEstiloFirmaInput
  }

  export type EstiloFirmaUpdateInput = {
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
    correos?: CorreoUpdateManyWithoutEstiloFirmaNestedInput
  }

  export type EstiloFirmaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
    correos?: CorreoUncheckedUpdateManyWithoutEstiloFirmaNestedInput
  }

  export type EstiloFirmaCreateManyInput = {
    id?: number
    nombreEstilo: string
    fuente: string
  }

  export type EstiloFirmaUpdateManyMutationInput = {
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
  }

  export type EstiloFirmaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CorreoListRelationFilter = {
    every?: CorreoWhereInput
    some?: CorreoWhereInput
    none?: CorreoWhereInput
  }

  export type DireccionBloqueadaListRelationFilter = {
    every?: DireccionBloqueadaWhereInput
    some?: DireccionBloqueadaWhereInput
    none?: DireccionBloqueadaWhereInput
  }

  export type DireccionFavoritaListRelationFilter = {
    every?: DireccionFavoritaWhereInput
    some?: DireccionFavoritaWhereInput
    none?: DireccionFavoritaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CorreoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DireccionBloqueadaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DireccionFavoritaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type EstiloFirmaNullableRelationFilter = {
    is?: EstiloFirmaWhereInput | null
    isNot?: EstiloFirmaWhereInput | null
  }

  export type TemaCorreoNullableRelationFilter = {
    is?: TemaCorreoWhereInput | null
    isNot?: TemaCorreoWhereInput | null
  }

  export type CorreoCountOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    esFavorito?: SortOrder
    colorFondo?: SortOrder
    nombreAnimacion?: SortOrder
    duracionAnimacion?: SortOrder
    contenidoAnuncio?: SortOrder
    fechaMostradoAnuncio?: SortOrder
    estiloFirmaId?: SortOrder
    temaId?: SortOrder
  }

  export type CorreoAvgOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    duracionAnimacion?: SortOrder
    estiloFirmaId?: SortOrder
    temaId?: SortOrder
  }

  export type CorreoMaxOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    esFavorito?: SortOrder
    colorFondo?: SortOrder
    nombreAnimacion?: SortOrder
    duracionAnimacion?: SortOrder
    contenidoAnuncio?: SortOrder
    fechaMostradoAnuncio?: SortOrder
    estiloFirmaId?: SortOrder
    temaId?: SortOrder
  }

  export type CorreoMinOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    esFavorito?: SortOrder
    colorFondo?: SortOrder
    nombreAnimacion?: SortOrder
    duracionAnimacion?: SortOrder
    contenidoAnuncio?: SortOrder
    fechaMostradoAnuncio?: SortOrder
    estiloFirmaId?: SortOrder
    temaId?: SortOrder
  }

  export type CorreoSumOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    duracionAnimacion?: SortOrder
    estiloFirmaId?: SortOrder
    temaId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DireccionBloqueadaCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionBloqueada?: SortOrder
    fechaBloqueo?: SortOrder
  }

  export type DireccionBloqueadaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type DireccionBloqueadaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionBloqueada?: SortOrder
    fechaBloqueo?: SortOrder
  }

  export type DireccionBloqueadaMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionBloqueada?: SortOrder
    fechaBloqueo?: SortOrder
  }

  export type DireccionBloqueadaSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type DireccionFavoritaCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionFavorita?: SortOrder
    fechaAgregado?: SortOrder
    categoria?: SortOrder
  }

  export type DireccionFavoritaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type DireccionFavoritaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionFavorita?: SortOrder
    fechaAgregado?: SortOrder
    categoria?: SortOrder
  }

  export type DireccionFavoritaMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    direccionFavorita?: SortOrder
    fechaAgregado?: SortOrder
    categoria?: SortOrder
  }

  export type DireccionFavoritaSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type TemaCorreoCountOrderByAggregateInput = {
    id?: SortOrder
    nombreTema?: SortOrder
  }

  export type TemaCorreoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TemaCorreoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreTema?: SortOrder
  }

  export type TemaCorreoMinOrderByAggregateInput = {
    id?: SortOrder
    nombreTema?: SortOrder
  }

  export type TemaCorreoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstiloFirmaCountOrderByAggregateInput = {
    id?: SortOrder
    nombreEstilo?: SortOrder
    fuente?: SortOrder
  }

  export type EstiloFirmaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstiloFirmaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreEstilo?: SortOrder
    fuente?: SortOrder
  }

  export type EstiloFirmaMinOrderByAggregateInput = {
    id?: SortOrder
    nombreEstilo?: SortOrder
    fuente?: SortOrder
  }

  export type EstiloFirmaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CorreoCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type DireccionBloqueadaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput> | DireccionBloqueadaCreateWithoutUsuarioInput[] | DireccionBloqueadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionBloqueadaCreateOrConnectWithoutUsuarioInput | DireccionBloqueadaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DireccionBloqueadaCreateManyUsuarioInputEnvelope
    connect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
  }

  export type DireccionFavoritaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput> | DireccionFavoritaCreateWithoutUsuarioInput[] | DireccionFavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionFavoritaCreateOrConnectWithoutUsuarioInput | DireccionFavoritaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DireccionFavoritaCreateManyUsuarioInputEnvelope
    connect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type DireccionBloqueadaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput> | DireccionBloqueadaCreateWithoutUsuarioInput[] | DireccionBloqueadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionBloqueadaCreateOrConnectWithoutUsuarioInput | DireccionBloqueadaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DireccionBloqueadaCreateManyUsuarioInputEnvelope
    connect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
  }

  export type DireccionFavoritaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput> | DireccionFavoritaCreateWithoutUsuarioInput[] | DireccionFavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionFavoritaCreateOrConnectWithoutUsuarioInput | DireccionFavoritaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DireccionFavoritaCreateManyUsuarioInputEnvelope
    connect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CorreoUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutRemitenteInput | CorreoUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutRemitenteInput | CorreoUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutRemitenteInput | CorreoUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutDestinatarioInput | CorreoUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutDestinatarioInput | CorreoUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutDestinatarioInput | CorreoUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type DireccionBloqueadaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput> | DireccionBloqueadaCreateWithoutUsuarioInput[] | DireccionBloqueadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionBloqueadaCreateOrConnectWithoutUsuarioInput | DireccionBloqueadaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DireccionBloqueadaUpsertWithWhereUniqueWithoutUsuarioInput | DireccionBloqueadaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DireccionBloqueadaCreateManyUsuarioInputEnvelope
    set?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    disconnect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    delete?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    connect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    update?: DireccionBloqueadaUpdateWithWhereUniqueWithoutUsuarioInput | DireccionBloqueadaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DireccionBloqueadaUpdateManyWithWhereWithoutUsuarioInput | DireccionBloqueadaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DireccionBloqueadaScalarWhereInput | DireccionBloqueadaScalarWhereInput[]
  }

  export type DireccionFavoritaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput> | DireccionFavoritaCreateWithoutUsuarioInput[] | DireccionFavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionFavoritaCreateOrConnectWithoutUsuarioInput | DireccionFavoritaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DireccionFavoritaUpsertWithWhereUniqueWithoutUsuarioInput | DireccionFavoritaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DireccionFavoritaCreateManyUsuarioInputEnvelope
    set?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    disconnect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    delete?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    connect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    update?: DireccionFavoritaUpdateWithWhereUniqueWithoutUsuarioInput | DireccionFavoritaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DireccionFavoritaUpdateManyWithWhereWithoutUsuarioInput | DireccionFavoritaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DireccionFavoritaScalarWhereInput | DireccionFavoritaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CorreoUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutRemitenteInput | CorreoUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutRemitenteInput | CorreoUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutRemitenteInput | CorreoUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutDestinatarioInput | CorreoUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutDestinatarioInput | CorreoUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutDestinatarioInput | CorreoUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput> | DireccionBloqueadaCreateWithoutUsuarioInput[] | DireccionBloqueadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionBloqueadaCreateOrConnectWithoutUsuarioInput | DireccionBloqueadaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DireccionBloqueadaUpsertWithWhereUniqueWithoutUsuarioInput | DireccionBloqueadaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DireccionBloqueadaCreateManyUsuarioInputEnvelope
    set?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    disconnect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    delete?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    connect?: DireccionBloqueadaWhereUniqueInput | DireccionBloqueadaWhereUniqueInput[]
    update?: DireccionBloqueadaUpdateWithWhereUniqueWithoutUsuarioInput | DireccionBloqueadaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DireccionBloqueadaUpdateManyWithWhereWithoutUsuarioInput | DireccionBloqueadaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DireccionBloqueadaScalarWhereInput | DireccionBloqueadaScalarWhereInput[]
  }

  export type DireccionFavoritaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput> | DireccionFavoritaCreateWithoutUsuarioInput[] | DireccionFavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DireccionFavoritaCreateOrConnectWithoutUsuarioInput | DireccionFavoritaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DireccionFavoritaUpsertWithWhereUniqueWithoutUsuarioInput | DireccionFavoritaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DireccionFavoritaCreateManyUsuarioInputEnvelope
    set?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    disconnect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    delete?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    connect?: DireccionFavoritaWhereUniqueInput | DireccionFavoritaWhereUniqueInput[]
    update?: DireccionFavoritaUpdateWithWhereUniqueWithoutUsuarioInput | DireccionFavoritaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DireccionFavoritaUpdateManyWithWhereWithoutUsuarioInput | DireccionFavoritaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DireccionFavoritaScalarWhereInput | DireccionFavoritaScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutCorreosEnviadosInput = {
    create?: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosEnviadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCorreosRecibidosInput = {
    create?: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosRecibidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EstiloFirmaCreateNestedOneWithoutCorreosInput = {
    create?: XOR<EstiloFirmaCreateWithoutCorreosInput, EstiloFirmaUncheckedCreateWithoutCorreosInput>
    connectOrCreate?: EstiloFirmaCreateOrConnectWithoutCorreosInput
    connect?: EstiloFirmaWhereUniqueInput
  }

  export type TemaCorreoCreateNestedOneWithoutCorreosInput = {
    create?: XOR<TemaCorreoCreateWithoutCorreosInput, TemaCorreoUncheckedCreateWithoutCorreosInput>
    connectOrCreate?: TemaCorreoCreateOrConnectWithoutCorreosInput
    connect?: TemaCorreoWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosEnviadosInput
    upsert?: UsuarioUpsertWithoutCorreosEnviadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreosEnviadosInput, UsuarioUpdateWithoutCorreosEnviadosInput>, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosRecibidosInput
    upsert?: UsuarioUpsertWithoutCorreosRecibidosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreosRecibidosInput, UsuarioUpdateWithoutCorreosRecibidosInput>, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
  }

  export type EstiloFirmaUpdateOneWithoutCorreosNestedInput = {
    create?: XOR<EstiloFirmaCreateWithoutCorreosInput, EstiloFirmaUncheckedCreateWithoutCorreosInput>
    connectOrCreate?: EstiloFirmaCreateOrConnectWithoutCorreosInput
    upsert?: EstiloFirmaUpsertWithoutCorreosInput
    disconnect?: EstiloFirmaWhereInput | boolean
    delete?: EstiloFirmaWhereInput | boolean
    connect?: EstiloFirmaWhereUniqueInput
    update?: XOR<XOR<EstiloFirmaUpdateToOneWithWhereWithoutCorreosInput, EstiloFirmaUpdateWithoutCorreosInput>, EstiloFirmaUncheckedUpdateWithoutCorreosInput>
  }

  export type TemaCorreoUpdateOneWithoutCorreosNestedInput = {
    create?: XOR<TemaCorreoCreateWithoutCorreosInput, TemaCorreoUncheckedCreateWithoutCorreosInput>
    connectOrCreate?: TemaCorreoCreateOrConnectWithoutCorreosInput
    upsert?: TemaCorreoUpsertWithoutCorreosInput
    disconnect?: TemaCorreoWhereInput | boolean
    delete?: TemaCorreoWhereInput | boolean
    connect?: TemaCorreoWhereUniqueInput
    update?: XOR<XOR<TemaCorreoUpdateToOneWithWhereWithoutCorreosInput, TemaCorreoUpdateWithoutCorreosInput>, TemaCorreoUncheckedUpdateWithoutCorreosInput>
  }

  export type UsuarioCreateNestedOneWithoutDireccionesBloqueadasInput = {
    create?: XOR<UsuarioCreateWithoutDireccionesBloqueadasInput, UsuarioUncheckedCreateWithoutDireccionesBloqueadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionesBloqueadasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutDireccionesBloqueadasNestedInput = {
    create?: XOR<UsuarioCreateWithoutDireccionesBloqueadasInput, UsuarioUncheckedCreateWithoutDireccionesBloqueadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionesBloqueadasInput
    upsert?: UsuarioUpsertWithoutDireccionesBloqueadasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDireccionesBloqueadasInput, UsuarioUpdateWithoutDireccionesBloqueadasInput>, UsuarioUncheckedUpdateWithoutDireccionesBloqueadasInput>
  }

  export type UsuarioCreateNestedOneWithoutDireccionesFavoritasInput = {
    create?: XOR<UsuarioCreateWithoutDireccionesFavoritasInput, UsuarioUncheckedCreateWithoutDireccionesFavoritasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionesFavoritasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutDireccionesFavoritasNestedInput = {
    create?: XOR<UsuarioCreateWithoutDireccionesFavoritasInput, UsuarioUncheckedCreateWithoutDireccionesFavoritasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionesFavoritasInput
    upsert?: UsuarioUpsertWithoutDireccionesFavoritasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDireccionesFavoritasInput, UsuarioUpdateWithoutDireccionesFavoritasInput>, UsuarioUncheckedUpdateWithoutDireccionesFavoritasInput>
  }

  export type CorreoCreateNestedManyWithoutTemaInput = {
    create?: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput> | CorreoCreateWithoutTemaInput[] | CorreoUncheckedCreateWithoutTemaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutTemaInput | CorreoCreateOrConnectWithoutTemaInput[]
    createMany?: CorreoCreateManyTemaInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutTemaInput = {
    create?: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput> | CorreoCreateWithoutTemaInput[] | CorreoUncheckedCreateWithoutTemaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutTemaInput | CorreoCreateOrConnectWithoutTemaInput[]
    createMany?: CorreoCreateManyTemaInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUpdateManyWithoutTemaNestedInput = {
    create?: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput> | CorreoCreateWithoutTemaInput[] | CorreoUncheckedCreateWithoutTemaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutTemaInput | CorreoCreateOrConnectWithoutTemaInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutTemaInput | CorreoUpsertWithWhereUniqueWithoutTemaInput[]
    createMany?: CorreoCreateManyTemaInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutTemaInput | CorreoUpdateWithWhereUniqueWithoutTemaInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutTemaInput | CorreoUpdateManyWithWhereWithoutTemaInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUncheckedUpdateManyWithoutTemaNestedInput = {
    create?: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput> | CorreoCreateWithoutTemaInput[] | CorreoUncheckedCreateWithoutTemaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutTemaInput | CorreoCreateOrConnectWithoutTemaInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutTemaInput | CorreoUpsertWithWhereUniqueWithoutTemaInput[]
    createMany?: CorreoCreateManyTemaInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutTemaInput | CorreoUpdateWithWhereUniqueWithoutTemaInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutTemaInput | CorreoUpdateManyWithWhereWithoutTemaInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoCreateNestedManyWithoutEstiloFirmaInput = {
    create?: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput> | CorreoCreateWithoutEstiloFirmaInput[] | CorreoUncheckedCreateWithoutEstiloFirmaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutEstiloFirmaInput | CorreoCreateOrConnectWithoutEstiloFirmaInput[]
    createMany?: CorreoCreateManyEstiloFirmaInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutEstiloFirmaInput = {
    create?: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput> | CorreoCreateWithoutEstiloFirmaInput[] | CorreoUncheckedCreateWithoutEstiloFirmaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutEstiloFirmaInput | CorreoCreateOrConnectWithoutEstiloFirmaInput[]
    createMany?: CorreoCreateManyEstiloFirmaInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUpdateManyWithoutEstiloFirmaNestedInput = {
    create?: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput> | CorreoCreateWithoutEstiloFirmaInput[] | CorreoUncheckedCreateWithoutEstiloFirmaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutEstiloFirmaInput | CorreoCreateOrConnectWithoutEstiloFirmaInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutEstiloFirmaInput | CorreoUpsertWithWhereUniqueWithoutEstiloFirmaInput[]
    createMany?: CorreoCreateManyEstiloFirmaInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutEstiloFirmaInput | CorreoUpdateWithWhereUniqueWithoutEstiloFirmaInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutEstiloFirmaInput | CorreoUpdateManyWithWhereWithoutEstiloFirmaInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUncheckedUpdateManyWithoutEstiloFirmaNestedInput = {
    create?: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput> | CorreoCreateWithoutEstiloFirmaInput[] | CorreoUncheckedCreateWithoutEstiloFirmaInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutEstiloFirmaInput | CorreoCreateOrConnectWithoutEstiloFirmaInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutEstiloFirmaInput | CorreoUpsertWithWhereUniqueWithoutEstiloFirmaInput[]
    createMany?: CorreoCreateManyEstiloFirmaInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutEstiloFirmaInput | CorreoUpdateWithWhereUniqueWithoutEstiloFirmaInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutEstiloFirmaInput | CorreoUpdateManyWithWhereWithoutEstiloFirmaInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CorreoCreateWithoutRemitenteInput = {
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    estiloFirma?: EstiloFirmaCreateNestedOneWithoutCorreosInput
    tema?: TemaCorreoCreateNestedOneWithoutCorreosInput
  }

  export type CorreoUncheckedCreateWithoutRemitenteInput = {
    id?: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type CorreoCreateOrConnectWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreoCreateManyRemitenteInputEnvelope = {
    data: CorreoCreateManyRemitenteInput | CorreoCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type CorreoCreateWithoutDestinatarioInput = {
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    estiloFirma?: EstiloFirmaCreateNestedOneWithoutCorreosInput
    tema?: TemaCorreoCreateNestedOneWithoutCorreosInput
  }

  export type CorreoUncheckedCreateWithoutDestinatarioInput = {
    id?: number
    remitenteId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type CorreoCreateOrConnectWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreoCreateManyDestinatarioInputEnvelope = {
    data: CorreoCreateManyDestinatarioInput | CorreoCreateManyDestinatarioInput[]
    skipDuplicates?: boolean
  }

  export type DireccionBloqueadaCreateWithoutUsuarioInput = {
    direccionBloqueada: string
    fechaBloqueo?: Date | string
  }

  export type DireccionBloqueadaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    direccionBloqueada: string
    fechaBloqueo?: Date | string
  }

  export type DireccionBloqueadaCreateOrConnectWithoutUsuarioInput = {
    where: DireccionBloqueadaWhereUniqueInput
    create: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput>
  }

  export type DireccionBloqueadaCreateManyUsuarioInputEnvelope = {
    data: DireccionBloqueadaCreateManyUsuarioInput | DireccionBloqueadaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DireccionFavoritaCreateWithoutUsuarioInput = {
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
  }

  export type DireccionFavoritaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
  }

  export type DireccionFavoritaCreateOrConnectWithoutUsuarioInput = {
    where: DireccionFavoritaWhereUniqueInput
    create: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput>
  }

  export type DireccionFavoritaCreateManyUsuarioInputEnvelope = {
    data: DireccionFavoritaCreateManyUsuarioInput | DireccionFavoritaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CorreoUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutRemitenteInput, CorreoUncheckedUpdateWithoutRemitenteInput>
    create: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutRemitenteInput, CorreoUncheckedUpdateWithoutRemitenteInput>
  }

  export type CorreoUpdateManyWithWhereWithoutRemitenteInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type CorreoScalarWhereInput = {
    AND?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
    OR?: CorreoScalarWhereInput[]
    NOT?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
    id?: IntFilter<"Correo"> | number
    remitenteId?: IntFilter<"Correo"> | number
    destinatarioId?: IntFilter<"Correo"> | number
    asunto?: StringFilter<"Correo"> | string
    cuerpo?: StringFilter<"Correo"> | string
    fechaEnvio?: DateTimeFilter<"Correo"> | Date | string
    leido?: BoolFilter<"Correo"> | boolean
    esFavorito?: BoolFilter<"Correo"> | boolean
    colorFondo?: StringNullableFilter<"Correo"> | string | null
    nombreAnimacion?: StringNullableFilter<"Correo"> | string | null
    duracionAnimacion?: IntNullableFilter<"Correo"> | number | null
    contenidoAnuncio?: StringNullableFilter<"Correo"> | string | null
    fechaMostradoAnuncio?: DateTimeNullableFilter<"Correo"> | Date | string | null
    estiloFirmaId?: IntNullableFilter<"Correo"> | number | null
    temaId?: IntNullableFilter<"Correo"> | number | null
  }

  export type CorreoUpsertWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutDestinatarioInput, CorreoUncheckedUpdateWithoutDestinatarioInput>
    create: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutDestinatarioInput, CorreoUncheckedUpdateWithoutDestinatarioInput>
  }

  export type CorreoUpdateManyWithWhereWithoutDestinatarioInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutDestinatarioInput>
  }

  export type DireccionBloqueadaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DireccionBloqueadaWhereUniqueInput
    update: XOR<DireccionBloqueadaUpdateWithoutUsuarioInput, DireccionBloqueadaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DireccionBloqueadaCreateWithoutUsuarioInput, DireccionBloqueadaUncheckedCreateWithoutUsuarioInput>
  }

  export type DireccionBloqueadaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DireccionBloqueadaWhereUniqueInput
    data: XOR<DireccionBloqueadaUpdateWithoutUsuarioInput, DireccionBloqueadaUncheckedUpdateWithoutUsuarioInput>
  }

  export type DireccionBloqueadaUpdateManyWithWhereWithoutUsuarioInput = {
    where: DireccionBloqueadaScalarWhereInput
    data: XOR<DireccionBloqueadaUpdateManyMutationInput, DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DireccionBloqueadaScalarWhereInput = {
    AND?: DireccionBloqueadaScalarWhereInput | DireccionBloqueadaScalarWhereInput[]
    OR?: DireccionBloqueadaScalarWhereInput[]
    NOT?: DireccionBloqueadaScalarWhereInput | DireccionBloqueadaScalarWhereInput[]
    id?: IntFilter<"DireccionBloqueada"> | number
    usuarioId?: IntFilter<"DireccionBloqueada"> | number
    direccionBloqueada?: StringFilter<"DireccionBloqueada"> | string
    fechaBloqueo?: DateTimeFilter<"DireccionBloqueada"> | Date | string
  }

  export type DireccionFavoritaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DireccionFavoritaWhereUniqueInput
    update: XOR<DireccionFavoritaUpdateWithoutUsuarioInput, DireccionFavoritaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DireccionFavoritaCreateWithoutUsuarioInput, DireccionFavoritaUncheckedCreateWithoutUsuarioInput>
  }

  export type DireccionFavoritaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DireccionFavoritaWhereUniqueInput
    data: XOR<DireccionFavoritaUpdateWithoutUsuarioInput, DireccionFavoritaUncheckedUpdateWithoutUsuarioInput>
  }

  export type DireccionFavoritaUpdateManyWithWhereWithoutUsuarioInput = {
    where: DireccionFavoritaScalarWhereInput
    data: XOR<DireccionFavoritaUpdateManyMutationInput, DireccionFavoritaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DireccionFavoritaScalarWhereInput = {
    AND?: DireccionFavoritaScalarWhereInput | DireccionFavoritaScalarWhereInput[]
    OR?: DireccionFavoritaScalarWhereInput[]
    NOT?: DireccionFavoritaScalarWhereInput | DireccionFavoritaScalarWhereInput[]
    id?: IntFilter<"DireccionFavorita"> | number
    usuarioId?: IntFilter<"DireccionFavorita"> | number
    direccionFavorita?: StringFilter<"DireccionFavorita"> | string
    fechaAgregado?: DateTimeFilter<"DireccionFavorita"> | Date | string
    categoria?: StringNullableFilter<"DireccionFavorita"> | string | null
  }

  export type UsuarioCreateWithoutCorreosEnviadosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosRecibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCorreosEnviadosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosRecibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCorreosEnviadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
  }

  export type UsuarioCreateWithoutCorreosRecibidosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoCreateNestedManyWithoutRemitenteInput
    direccionesBloqueadas?: DireccionBloqueadaCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCorreosRecibidosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedCreateNestedManyWithoutUsuarioInput
    direccionesFavoritas?: DireccionFavoritaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCorreosRecibidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
  }

  export type EstiloFirmaCreateWithoutCorreosInput = {
    nombreEstilo: string
    fuente: string
  }

  export type EstiloFirmaUncheckedCreateWithoutCorreosInput = {
    id?: number
    nombreEstilo: string
    fuente: string
  }

  export type EstiloFirmaCreateOrConnectWithoutCorreosInput = {
    where: EstiloFirmaWhereUniqueInput
    create: XOR<EstiloFirmaCreateWithoutCorreosInput, EstiloFirmaUncheckedCreateWithoutCorreosInput>
  }

  export type TemaCorreoCreateWithoutCorreosInput = {
    nombreTema: string
  }

  export type TemaCorreoUncheckedCreateWithoutCorreosInput = {
    id?: number
    nombreTema: string
  }

  export type TemaCorreoCreateOrConnectWithoutCorreosInput = {
    where: TemaCorreoWhereUniqueInput
    create: XOR<TemaCorreoCreateWithoutCorreosInput, TemaCorreoUncheckedCreateWithoutCorreosInput>
  }

  export type UsuarioUpsertWithoutCorreosEnviadosInput = {
    update: XOR<UsuarioUpdateWithoutCorreosEnviadosInput, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
    create: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreosEnviadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreosEnviadosInput, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
  }

  export type UsuarioUpdateWithoutCorreosEnviadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosRecibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreosEnviadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosRecibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUpsertWithoutCorreosRecibidosInput = {
    update: XOR<UsuarioUpdateWithoutCorreosRecibidosInput, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
    create: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreosRecibidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreosRecibidosInput, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
  }

  export type UsuarioUpdateWithoutCorreosRecibidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreosRecibidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EstiloFirmaUpsertWithoutCorreosInput = {
    update: XOR<EstiloFirmaUpdateWithoutCorreosInput, EstiloFirmaUncheckedUpdateWithoutCorreosInput>
    create: XOR<EstiloFirmaCreateWithoutCorreosInput, EstiloFirmaUncheckedCreateWithoutCorreosInput>
    where?: EstiloFirmaWhereInput
  }

  export type EstiloFirmaUpdateToOneWithWhereWithoutCorreosInput = {
    where?: EstiloFirmaWhereInput
    data: XOR<EstiloFirmaUpdateWithoutCorreosInput, EstiloFirmaUncheckedUpdateWithoutCorreosInput>
  }

  export type EstiloFirmaUpdateWithoutCorreosInput = {
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
  }

  export type EstiloFirmaUncheckedUpdateWithoutCorreosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: StringFieldUpdateOperationsInput | string
    fuente?: StringFieldUpdateOperationsInput | string
  }

  export type TemaCorreoUpsertWithoutCorreosInput = {
    update: XOR<TemaCorreoUpdateWithoutCorreosInput, TemaCorreoUncheckedUpdateWithoutCorreosInput>
    create: XOR<TemaCorreoCreateWithoutCorreosInput, TemaCorreoUncheckedCreateWithoutCorreosInput>
    where?: TemaCorreoWhereInput
  }

  export type TemaCorreoUpdateToOneWithWhereWithoutCorreosInput = {
    where?: TemaCorreoWhereInput
    data: XOR<TemaCorreoUpdateWithoutCorreosInput, TemaCorreoUncheckedUpdateWithoutCorreosInput>
  }

  export type TemaCorreoUpdateWithoutCorreosInput = {
    nombreTema?: StringFieldUpdateOperationsInput | string
  }

  export type TemaCorreoUncheckedUpdateWithoutCorreosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreTema?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateWithoutDireccionesBloqueadasInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direccionesFavoritas?: DireccionFavoritaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDireccionesBloqueadasInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direccionesFavoritas?: DireccionFavoritaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDireccionesBloqueadasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDireccionesBloqueadasInput, UsuarioUncheckedCreateWithoutDireccionesBloqueadasInput>
  }

  export type UsuarioUpsertWithoutDireccionesBloqueadasInput = {
    update: XOR<UsuarioUpdateWithoutDireccionesBloqueadasInput, UsuarioUncheckedUpdateWithoutDireccionesBloqueadasInput>
    create: XOR<UsuarioCreateWithoutDireccionesBloqueadasInput, UsuarioUncheckedCreateWithoutDireccionesBloqueadasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDireccionesBloqueadasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDireccionesBloqueadasInput, UsuarioUncheckedUpdateWithoutDireccionesBloqueadasInput>
  }

  export type UsuarioUpdateWithoutDireccionesBloqueadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDireccionesBloqueadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direccionesFavoritas?: DireccionFavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutDireccionesFavoritasInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDireccionesFavoritasInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    correosEnviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDireccionesFavoritasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDireccionesFavoritasInput, UsuarioUncheckedCreateWithoutDireccionesFavoritasInput>
  }

  export type UsuarioUpsertWithoutDireccionesFavoritasInput = {
    update: XOR<UsuarioUpdateWithoutDireccionesFavoritasInput, UsuarioUncheckedUpdateWithoutDireccionesFavoritasInput>
    create: XOR<UsuarioCreateWithoutDireccionesFavoritasInput, UsuarioUncheckedCreateWithoutDireccionesFavoritasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDireccionesFavoritasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDireccionesFavoritasInput, UsuarioUncheckedUpdateWithoutDireccionesFavoritasInput>
  }

  export type UsuarioUpdateWithoutDireccionesFavoritasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDireccionesFavoritasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    correosEnviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direccionesBloqueadas?: DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CorreoCreateWithoutTemaInput = {
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    estiloFirma?: EstiloFirmaCreateNestedOneWithoutCorreosInput
  }

  export type CorreoUncheckedCreateWithoutTemaInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
  }

  export type CorreoCreateOrConnectWithoutTemaInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput>
  }

  export type CorreoCreateManyTemaInputEnvelope = {
    data: CorreoCreateManyTemaInput | CorreoCreateManyTemaInput[]
    skipDuplicates?: boolean
  }

  export type CorreoUpsertWithWhereUniqueWithoutTemaInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutTemaInput, CorreoUncheckedUpdateWithoutTemaInput>
    create: XOR<CorreoCreateWithoutTemaInput, CorreoUncheckedCreateWithoutTemaInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutTemaInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutTemaInput, CorreoUncheckedUpdateWithoutTemaInput>
  }

  export type CorreoUpdateManyWithWhereWithoutTemaInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutTemaInput>
  }

  export type CorreoCreateWithoutEstiloFirmaInput = {
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    tema?: TemaCorreoCreateNestedOneWithoutCorreosInput
  }

  export type CorreoUncheckedCreateWithoutEstiloFirmaInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    temaId?: number | null
  }

  export type CorreoCreateOrConnectWithoutEstiloFirmaInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput>
  }

  export type CorreoCreateManyEstiloFirmaInputEnvelope = {
    data: CorreoCreateManyEstiloFirmaInput | CorreoCreateManyEstiloFirmaInput[]
    skipDuplicates?: boolean
  }

  export type CorreoUpsertWithWhereUniqueWithoutEstiloFirmaInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutEstiloFirmaInput, CorreoUncheckedUpdateWithoutEstiloFirmaInput>
    create: XOR<CorreoCreateWithoutEstiloFirmaInput, CorreoUncheckedCreateWithoutEstiloFirmaInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutEstiloFirmaInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutEstiloFirmaInput, CorreoUncheckedUpdateWithoutEstiloFirmaInput>
  }

  export type CorreoUpdateManyWithWhereWithoutEstiloFirmaInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutEstiloFirmaInput>
  }

  export type CorreoCreateManyRemitenteInput = {
    id?: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type CorreoCreateManyDestinatarioInput = {
    id?: number
    remitenteId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
    temaId?: number | null
  }

  export type DireccionBloqueadaCreateManyUsuarioInput = {
    id?: number
    direccionBloqueada: string
    fechaBloqueo?: Date | string
  }

  export type DireccionFavoritaCreateManyUsuarioInput = {
    id?: number
    direccionFavorita: string
    fechaAgregado?: Date | string
    categoria?: string | null
  }

  export type CorreoUpdateWithoutRemitenteInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    estiloFirma?: EstiloFirmaUpdateOneWithoutCorreosNestedInput
    tema?: TemaCorreoUpdateOneWithoutCorreosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoUncheckedUpdateManyWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoUpdateWithoutDestinatarioInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    estiloFirma?: EstiloFirmaUpdateOneWithoutCorreosNestedInput
    tema?: TemaCorreoUpdateOneWithoutCorreosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoUncheckedUpdateManyWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DireccionBloqueadaUpdateWithoutUsuarioInput = {
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionBloqueadaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionBloqueadaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccionBloqueada?: StringFieldUpdateOperationsInput | string
    fechaBloqueo?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DireccionFavoritaUpdateWithoutUsuarioInput = {
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionFavoritaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionFavoritaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccionFavorita?: StringFieldUpdateOperationsInput | string
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CorreoCreateManyTemaInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    estiloFirmaId?: number | null
  }

  export type CorreoUpdateWithoutTemaInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    estiloFirma?: EstiloFirmaUpdateOneWithoutCorreosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutTemaInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoUncheckedUpdateManyWithoutTemaInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloFirmaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoCreateManyEstiloFirmaInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    asunto: string
    cuerpo: string
    fechaEnvio?: Date | string
    leido?: boolean
    esFavorito?: boolean
    colorFondo?: string | null
    nombreAnimacion?: string | null
    duracionAnimacion?: number | null
    contenidoAnuncio?: string | null
    fechaMostradoAnuncio?: Date | string | null
    temaId?: number | null
  }

  export type CorreoUpdateWithoutEstiloFirmaInput = {
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    tema?: TemaCorreoUpdateOneWithoutCorreosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutEstiloFirmaInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CorreoUncheckedUpdateManyWithoutEstiloFirmaInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    asunto?: StringFieldUpdateOperationsInput | string
    cuerpo?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    esFavorito?: BoolFieldUpdateOperationsInput | boolean
    colorFondo?: NullableStringFieldUpdateOperationsInput | string | null
    nombreAnimacion?: NullableStringFieldUpdateOperationsInput | string | null
    duracionAnimacion?: NullableIntFieldUpdateOperationsInput | number | null
    contenidoAnuncio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaMostradoAnuncio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    temaId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TemaCorreoCountOutputTypeDefaultArgs instead
     */
    export type TemaCorreoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TemaCorreoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EstiloFirmaCountOutputTypeDefaultArgs instead
     */
    export type EstiloFirmaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EstiloFirmaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CorreoDefaultArgs instead
     */
    export type CorreoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CorreoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DireccionBloqueadaDefaultArgs instead
     */
    export type DireccionBloqueadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DireccionBloqueadaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DireccionFavoritaDefaultArgs instead
     */
    export type DireccionFavoritaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DireccionFavoritaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TemaCorreoDefaultArgs instead
     */
    export type TemaCorreoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TemaCorreoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EstiloFirmaDefaultArgs instead
     */
    export type EstiloFirmaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EstiloFirmaDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}